A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN ../LE1/lib/EPL/epl_uart.OBJ
ASSEMBLER INVOKED BY: C:\KEIL\C51\BIN\A51.exe ../LE1/lib/EPL/epl_uart.src

LOC  OBJ            LINE     SOURCE

                       1     ; ../LE1/lib/EPL/epl_uart.SRC generated from: ../LE1/lib/EPL/epl_uart.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\KEIL\C51\BIN\C51.exe ../LE1/lib/EPL/epl_uart.c INCDIR(../LE1/include) BROWSE DE
                             BUG CD SB OMF2 WL(0) PREPRINT SRC
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    ___LE1_LIB_EPL_EPL_UART
                       8     
  009B                 9     TB80    BIT     098H.3
  00BE                10     SPISSTAT        DATA    0BEH
  00C8                11     T2I0    BIT     0C8H.0
  00C3                12     CCH1    DATA    0C3H
  0080                13     P0      DATA    080H
  00C9                14     T2I1    BIT     0C8H.1
  00DF                15     CCPDATO DATA    0DFH
  00C5                16     CCH2    DATA    0C5H
  0090                17     P1      DATA    090H
  00C7                18     CCH3    DATA    0C7H
  00A0                19     P2      DATA    0A0H
  009D                20     SM20    BIT     098H.5
  00B0                21     P3      DATA    0B0H
  00D6                22     AC      BIT     0D0H.6
  00C2                23     CCL1    DATA    0C2H
  00C4                24     CCL2    DATA    0C4H
  00DF                25     BD      BIT     0D8H.7
  00B8                26     RFSPI   BIT     0B8H.0
  00AF                27     EA      BIT     0A8H.7
  00CC                28     T2      DATA    0CCH
  00C6                29     CCL3    DATA    0C6H
  00B7                30     SPISRDSZ        DATA    0B7H
  00CB                31     T2R0    BIT     0C8H.3
  00CC                32     T2R1    BIT     0C8H.4
  00A8                33     IEN0    DATA    0A8H
  00B8                34     IEN1    DATA    0B8H
  00A5                35     WUCON   DATA    0A5H
  0085                36     DPH1    DATA    085H
  00DB                37     COMPCON DATA    0DBH
  00A3                38     CLKCTRL DATA    0A3H
  0084                39     DPL1    DATA    084H
  00CD                40     I2FR    BIT     0C8H.5
  00BB                41     WUPIN   BIT     0B8H.3
  00CE                42     I3FR    BIT     0C8H.6
  00FF                43     SPIMDAT DATA    0FFH
  00C7                44     EXF2    BIT     0C0H.7
  009C                45     REN0    BIT     098H.4
  00CA                46     T2CM    BIT     0C8H.2
  00B9                47     RF      BIT     0B8H.1
  00BD                48     WUIRQ   BIT     0B8H.5
  00E7                49     SPIRDAT DATA    0E7H
  00C1                50     CCEN    DATA    0C1H
  00E2                51     W2CON0  DATA    0E2H
  00BF                52     SPISDAT DATA    0BFH
  00D7                53     CY      BIT     0D0H.7
  00E1                54     W2CON1  DATA    0E1H
  00FB                55     FDCR    DATA    0FBH
  00E8                56     RFCE    BIT     0E8H.0
  00CB                57     CRCH    DATA    0CBH
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     2

  0081                58     SP      DATA    081H
  00D2                59     OV      BIT     0D0H.2
  00CA                60     CRCL    DATA    0CAH
  00AD                61     CLKLFCTRL       DATA    0ADH
  00B1                62     RSTREAS DATA    0B1H
  00CF                63     T2PS    BIT     0C8H.7
  00F9                64     FPCR    DATA    0F9H
  00BC                65     MISC    BIT     0B8H.4
  00A1                66     PWMDC0  DATA    0A1H
  00B4                67     RTC2CMP0        DATA    0B4H
  00A2                68     PWMDC1  DATA    0A2H
  00B5                69     RTC2CMP1        DATA    0B5H
  0080                70     P00     BIT     080H.0
  00BA                71     S0RELH  DATA    0BAH
  0090                72     P10     BIT     090H.0
  0081                73     P01     BIT     080H.1
  0087                74     PCON    DATA    087H
  00A0                75     P20     BIT     0A0H.0
  0091                76     P11     BIT     090H.1
  0082                77     P02     BIT     080H.2
  00B0                78     P30     BIT     0B0H.0
  00A1                79     P21     BIT     0A0H.1
  0092                80     P12     BIT     090H.2
  0083                81     P03     BIT     080H.3
  00C2                82     SPIF    BIT     0C0H.2
  00FA                83     RDIS    BIT     0F8H.2
  00B1                84     P31     BIT     0B0H.1
  00A2                85     P22     BIT     0A0H.2
  0093                86     P13     BIT     090H.3
  0084                87     P04     BIT     080H.4
  00AA                88     S0RELL  DATA    0AAH
  00B2                89     P32     BIT     0B0H.2
  00A3                90     P23     BIT     0A0H.3
  0094                91     P14     BIT     090H.4
  0085                92     P05     BIT     080H.5
  00D9                93     W2SADR  DATA    0D9H
  0089                94     TMOD    DATA    089H
  0088                95     TCON    DATA    088H
  00B3                96     P33     BIT     0B0H.3
  00A4                97     P24     BIT     0A0H.4
  0095                98     P15     BIT     090H.5
  0086                99     P06     BIT     080H.6
  00B4               100     P34     BIT     0B0H.4
  00A5               101     P25     BIT     0A0H.5
  0096               102     P16     BIT     090H.6
  0087               103     P07     BIT     080H.7
  00C2               104     CC1     DATA    0C2H
  00B5               105     P35     BIT     0B0H.5
  00A6               106     P26     BIT     0A0H.6
  0097               107     P17     BIT     090H.7
  00C4               108     CC2     DATA    0C4H
  00B6               109     P36     BIT     0B0H.6
  00A7               110     P27     BIT     0A0H.7
  00C6               111     CC3     DATA    0C6H
  00B7               112     P37     BIT     0B0H.7
  00EA               113     RFCKEN  BIT     0E8H.2
  00F8               114     WPEN    BIT     0F8H.0
  00DD               115     CCPDATIA        DATA    0DDH
  00DE               116     CCPDATIB        DATA    0DEH
  0089               117     IE0     BIT     088H.1
  00FC               118     RDYN    BIT     0F8H.4
  008B               119     IE1     BIT     088H.3
  00CF               120     WUOPC0  DATA    0CFH
  00F0               121     B       DATA    0F0H
  00E9               122     MD0     DATA    0E9H
  00CE               123     WUOPC1  DATA    0CEH
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     3

  00A7               124     MEMCON  DATA    0A7H
  00EA               125     MD1     DATA    0EAH
  00D7               126     RNGDAT  DATA    0D7H
  00EB               127     MD2     DATA    0EBH
  00EC               128     MD3     DATA    0ECH
  00ED               129     MD4     DATA    0EDH
  00AF               130     WDSV    DATA    0AFH
  00EE               131     MD5     DATA    0EEH
  00E0               132     ACC     DATA    0E0H
  00DC               133     POFCON  DATA    0DCH
  00AC               134     ES0     BIT     0A8H.4
  00A9               135     ET0     BIT     0A8H.1
  00A9               136     IP0     DATA    0A9H
  00AB               137     ET1     BIT     0A8H.3
  008D               138     TF0     BIT     088H.5
  00B9               139     IP1     DATA    0B9H
  00AD               140     ET2     BIT     0A8H.5
  0098               141     RI0     BIT     098H.0
  008F               142     TF1     BIT     088H.7
  00C0               143     RFSPIF  BIT     0C0H.0
  00C6               144     TF2     BIT     0C0H.6
  00FC               145     SPIMCON0        DATA    0FCH
  00D6               146     RNGCTL  DATA    0D6H
  008C               147     TH0     DATA    08CH
  00A8               148     EX0     BIT     0A8H.0
  0099               149     TI0     BIT     098H.1
  0088               150     IT0     BIT     088H.0
  00FD               151     SPIMCON1        DATA    0FDH
  008D               152     TH1     DATA    08DH
  00AA               153     EX1     BIT     0A8H.2
  008A               154     IT1     BIT     088H.2
  00CD               155     TH2     DATA    0CDH
  00AE               156     OPMCON  DATA    0AEH
  00D0               157     P       BIT     0D0H.0
  009F               158     SM0     BIT     098H.7
  008A               159     TL0     DATA    08AH
  009E               160     SM1     BIT     098H.6
  00E4               161     SPIRCON0        DATA    0E4H
  008B               162     TL1     DATA    08BH
  00E5               163     SPIRCON1        DATA    0E5H
  00CC               164     TL2     DATA    0CCH
  00BC               165     SPISCON0        DATA    0BCH
  00BD               166     SPISCON1        DATA    0BDH
  00D3               167     RS0     BIT     0D0H.3
  008C               168     TR0     BIT     088H.4
  00D4               169     RS1     BIT     0D0H.4
  00B2               170     PWMCON  DATA    0B2H
  008E               171     TR1     BIT     088H.6
  00CA               172     CRC     DATA    0CAH
  00A6               173     INTEXP  DATA    0A6H
  00C3               174     WUPINF  BIT     0C0H.3
  00FA               175     FCR     DATA    0FAH
  00D3               176     ADCCON1 DATA    0D3H
  00D2               177     ADCCON2 DATA    0D2H
  0083               178     DPH     DATA    083H
  00D1               179     ADCCON3 DATA    0D1H
  00C1               180     RFF     BIT     0C0H.1
  0093               181     P0DIR   DATA    093H
  0082               182     DPL     DATA    082H
  009E               183     P0CON   DATA    09EH
  0099               184     S0BUF   DATA    099H
  0094               185     P1DIR   DATA    094H
  009F               186     P1CON   DATA    09FH
  0095               187     P2DIR   DATA    095H
  00BF               188     EXEN2   BIT     0B8H.7
  00DA               189     W2DAT   DATA    0DAH
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     4

  0097               190     P2CON   DATA    097H
  0096               191     P3DIR   DATA    096H
  00A4               192     PWRDWN  DATA    0A4H
  0098               193     S0CON   DATA    098H
  008F               194     P3CON   DATA    08FH
  00B6               195     RTC2CPT00       DATA    0B6H
  00D8               196     ADCON   DATA    0D8H
  00AC               197     RTC2CPT10       DATA    0ACH
  00AB               198     RTC2CPT01       DATA    0ABH
  00C8               199     T2CON   DATA    0C8H
  0092               200     DPS     DATA    092H
  00FD               201     WEN     BIT     0F8H.5
  00F8               202     FSR     DATA    0F8H
  00D4               203     ADCDATH DATA    0D4H
  00C9               204     MPAGE   DATA    0C9H
  00BA               205     SPI     BIT     0B8H.2
  00F9               206     RDEND   BIT     0F8H.1
  00D5               207     ADCDATL DATA    0D5H
  00FB               208     INFEN   BIT     0F8H.3
  00FF               209     MCDIS   BIT     0F8H.7
  00C5               210     WUF     BIT     0C0H.5
  00C4               211     MISCF   BIT     0C0H.4
  00EF               212     ARCON   DATA    0EFH
  00D5               213     F0      BIT     0D0H.5
  00FE               214     STP     BIT     0F8H.6
  00FE               215     SPIMSTAT        DATA    0FEH
  00E8               216     RFCON   DATA    0E8H
  00D0               217     PSW     DATA    0D0H
  009A               218     RB80    BIT     098H.2
  00C0               219     IRCON   DATA    0C0H
  00E9               220     RFCSN   BIT     0E8H.1
  00E6               221     SPIRSTAT        DATA    0E6H
  00B3               222     RTC2CON DATA    0B3H
                     223     ?PR?_epl_uart_init?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     224     ?PR?_epl_uart_putchar?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     225     ?PR?_epl_uart_putstr?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     226     ?DT?_epl_uart_putstr?___LE1_LIB_EPL_EPL_UART SEGMENT DATA OVERLAYABLE
                     227     ?PR?epl_uart_getchar?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     228     ?PR?_?epl_uart_putint?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     229     ?PR?_?epl_uart_puthex?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     230     ?PR?epl_uart_rcv_buf_is_empty?___LE1_LIB_EPL_EPL_UART SEGMENT CODE 
                     231     ?CO?___LE1_LIB_EPL_EPL_UART              SEGMENT CODE 
                     232             EXTRN   CODE (?C?CLDPTR)
                     233             EXTRN   DATA (?C_IBP)
                     234             EXTRN   CODE (?C?UIDIV)
                     235             PUBLIC  epl_uart_rcv_buf_is_empty
                     236             PUBLIC  _?epl_uart_puthex
                     237             PUBLIC  _?epl_uart_putint
                     238             PUBLIC  epl_uart_getchar
                     239             PUBLIC  _epl_uart_putstr
                     240             PUBLIC  _epl_uart_putchar
                     241             PUBLIC  _epl_uart_init
                     242     
----                 243             RSEG  ?DT?_epl_uart_putstr?___LE1_LIB_EPL_EPL_UART
0000                 244     ?_epl_uart_putstr?BYTE:
0000                 245             str?243:   DS   3
                     246     
----                 247             RSEG  ?CO?___LE1_LIB_EPL_EPL_UART
0000                 248     ?SC_0:
0000 307800          249             DB  '0' ,'x' ,000H
                     250     
                     251     
----                 252             RSEG ?PR?_?epl_uart_putint?___LE1_LIB_EPL_EPL_UART
                     253     ; /** @file
                     254     ;  * Implementation of the non-interrupt EPL UART module
                     255     ;  * @author: Jackal Chen <wtg.design@gmail.com>
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     5

                     256     ;  */
                     257     ; 
                     258     ; #include <Nordic/reg24le1.h>
                     259     ; #include <stdint.h>
                     260     ; #include <EPL/epl_uart.h>
                     261     ; 
                     262     ; 
                     263     ; #define BAUD_57K6   1015  // = Round(1024 - (2*16e6)/(64*57600))
                     264     ; #define BAUD_38K4   1011  // = Round(1024 - (2*16e6)/(64*38400))
                     265     ; #define BAUD_19K2    998  // = Round(1024 - (2*16e6)/(64*19200))
                     266     ; #define BAUD_9K6     972  // = Round(1024 - (2*16e6)/(64*9600))
                     267     ; 
                     268     ; void epl_uart_init(epl_uart_baudrate_t baud){
                     269     
----                 270             RSEG  ?PR?_epl_uart_init?___LE1_LIB_EPL_EPL_UART
0000                 271     _epl_uart_init:
                     272             USING   0
                     273                             ; SOURCE LINE # 16
                     274     ;---- Variable 'temp?041' assigned to Register 'R4/R5' ----
                     275     ;---- Variable 'baud?040' assigned to Register 'R7' ----
                     276     ;       unsigned int temp;
                     277     ; 
                     278     ;       ES0 = 0;                                      // Disable UART0 interrupt while init
                             ializing
                     279                             ; SOURCE LINE # 19
0000 C2AC            280             CLR     ES0
                     281     ;       REN0 = 1;                                     // Enable receiver
                     282                             ; SOURCE LINE # 20
0002 D29C            283             SETB    REN0
                     284     ;       SM0 = 0;                                      // Mode 1..
                     285                             ; SOURCE LINE # 21
0004 C29F            286             CLR     SM0
                     287     ;       SM1 = 1;                                      // ..8 bit variable baud rate
                     288                             ; SOURCE LINE # 22
0006 D29E            289             SETB    SM1
                     290     ;       PCON |= 0x80;                                 // SMOD = 1
                     291                             ; SOURCE LINE # 23
0008 438780          292             ORL     PCON,#080H
                     293     ;       ADCON |= 0x80;                                // Select internal baud rate generato
                             r
                     294                             ; SOURCE LINE # 24
000B 43D880          295             ORL     ADCON,#080H
                     296     ;       
                     297     ;       switch(baud){
                     298                             ; SOURCE LINE # 26
000E EF              299             MOV     A,R7
000F 6013            300             JZ      ?C0004
0011 24FE            301             ADD     A,#0FEH
0013 6009            302             JZ      ?C0003
0015 14              303             DEC     A
0016 7012            304             JNZ     ?C0006
                     305     ;               case UART_BAUD_57K6:
                     306                             ; SOURCE LINE # 27
0018                 307     ?C0002:
                     308     ;                               temp = BAUD_57K6;
                     309                             ; SOURCE LINE # 28
0018 7C03            310             MOV     R4,#03H
001A 7DF7            311             MOV     R5,#0F7H
                     312     ;                               break;
                     313                             ; SOURCE LINE # 29
001C 8010            314             SJMP    ?C0001
                     315     ;               case UART_BAUD_38K4:
                     316                             ; SOURCE LINE # 30
001E                 317     ?C0003:
                     318     ;                               temp = BAUD_38K4;
                     319                             ; SOURCE LINE # 31
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     6

001E 7C03            320             MOV     R4,#03H
0020 7DF3            321             MOV     R5,#0F3H
                     322     ;                               break;
                     323                             ; SOURCE LINE # 32
0022 800A            324             SJMP    ?C0001
                     325     ;               case UART_BAUD_9K6:
                     326                             ; SOURCE LINE # 33
0024                 327     ?C0004:
                     328     ;                               temp = BAUD_9K6;
                     329                             ; SOURCE LINE # 34
0024 7C03            330             MOV     R4,#03H
0026 7DCC            331             MOV     R5,#0CCH
                     332     ;                               break;
                     333                             ; SOURCE LINE # 35
0028 8004            334             SJMP    ?C0001
                     335     ;               case UART_BAUD_19K2:
                     336                             ; SOURCE LINE # 36
                     337     ;               default:
                     338                             ; SOURCE LINE # 37
002A                 339     ?C0006:
                     340     ;                               temp = BAUD_19K2;
                     341                             ; SOURCE LINE # 38
002A 7C03            342             MOV     R4,#03H
002C 7DE6            343             MOV     R5,#0E6H
                     344     ;                               break;
                     345                             ; SOURCE LINE # 39
                     346     ;       }
                     347                             ; SOURCE LINE # 40
002E                 348     ?C0001:
                     349     ;       
                     350     ;       S0RELL = (unsigned char)temp;
                     351                             ; SOURCE LINE # 42
002E 8DAA            352             MOV     S0RELL,R5
                     353     ;       S0RELH = (unsigned char)(temp >> 8);
                     354                             ; SOURCE LINE # 43
0030 8CBA            355             MOV     S0RELH,R4
                     356     ;   
                     357     ;       P0DIR |= 0x10;      // P04 (RxD) is input
                     358                             ; SOURCE LINE # 45
0032 439310          359             ORL     P0DIR,#010H
                     360     ;       P0DIR &= ~0x08;         // P03 (TxD) is output
                     361                             ; SOURCE LINE # 46
0035 5393F7          362             ANL     P0DIR,#0F7H
                     363     ;       
                     364     ;       TI0 = 0;
                     365                             ; SOURCE LINE # 48
0038 C299            366             CLR     TI0
                     367     ;       RI0 = 0;
                     368                             ; SOURCE LINE # 49
003A C298            369             CLR     RI0
                     370     ; }
                     371                             ; SOURCE LINE # 50
003C 22              372             RET     
                     373     ; END OF _epl_uart_init
                     374     
                     375     ; 
                     376     ; void epl_uart_putchar(unsigned char ch){
                     377     
----                 378             RSEG  ?PR?_epl_uart_putchar?___LE1_LIB_EPL_EPL_UART
0000                 379     _epl_uart_putchar:
                     380             USING   0
                     381                             ; SOURCE LINE # 52
                     382     ;---- Variable 'ch?142' assigned to Register 'R7' ----
                     383     ;       S0BUF = ch;     /* write to serial buffer */
                     384                             ; SOURCE LINE # 53
0000 8F99            385             MOV     S0BUF,R7
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     7

0002                 386     ?C0008:
                     387     ;       while (!TI0)    /* wait until done */
                     388                             ; SOURCE LINE # 54
0002 3099FD          389             JNB     TI0,?C0008
0005                 390     ?C0009:
                     391     ;               ;
                     392     ;       TI0 = 0;        /* clean transmit done bit */
                     393                             ; SOURCE LINE # 56
0005 C299            394             CLR     TI0
                     395     ; }
                     396                             ; SOURCE LINE # 57
0007 22              397             RET     
                     398     ; END OF _epl_uart_putchar
                     399     
                     400     ; 
                     401     ; void epl_uart_putstr(unsigned char *str){
                     402     
----                 403             RSEG  ?PR?_epl_uart_putstr?___LE1_LIB_EPL_EPL_UART
0000                 404     _epl_uart_putstr:
                     405             USING   0
                     406                             ; SOURCE LINE # 59
0000 8B00     F      407             MOV     str?243,R3
0002 8A00     F      408             MOV     str?243+01H,R2
0004 8900     F      409             MOV     str?243+02H,R1
0006                 410     ?C0011:
                     411     ;       while(*str)
                     412                             ; SOURCE LINE # 60
0006 AB00     F      413             MOV     R3,str?243
0008 AA00     F      414             MOV     R2,str?243+01H
000A A900     F      415             MOV     R1,str?243+02H
000C 120000   F      416             LCALL   ?C?CLDPTR
000F 6013            417             JZ      ?C0013
                     418     ;               epl_uart_putchar(*str++);
                     419                             ; SOURCE LINE # 61
0011 0500     F      420             INC     str?243+02H
0013 E500     F      421             MOV     A,str?243+02H
0015 7002            422             JNZ     ?C0027
0017 0500     F      423             INC     str?243+01H
0019                 424     ?C0027:
0019 14              425             DEC     A
001A F9              426             MOV     R1,A
001B 120000   F      427             LCALL   ?C?CLDPTR
001E FF              428             MOV     R7,A
001F 120000   F      429             LCALL   _epl_uart_putchar
0022 80E2            430             SJMP    ?C0011
                     431     ; }
                     432                             ; SOURCE LINE # 62
0024                 433     ?C0013:
0024 22              434             RET     
                     435     ; END OF _epl_uart_putstr
                     436     
                     437     ; 
                     438     ; unsigned char epl_uart_getchar(void){
                     439     
----                 440             RSEG  ?PR?epl_uart_getchar?___LE1_LIB_EPL_EPL_UART
0000                 441     epl_uart_getchar:
                     442             USING   0
                     443                             ; SOURCE LINE # 64
0000                 444     ?C0014:
                     445     ;       unsigned char ret;
                     446     ; 
                     447     ;       while (!RI0)    /* wait until done */
                     448                             ; SOURCE LINE # 67
0000 3098FD          449             JNB     RI0,?C0014
0003                 450     ?C0015:
                     451     ;               ;
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     8

                     452     ;       RI0 = 0;                /* clean receive bit */
                     453                             ; SOURCE LINE # 69
0003 C298            454             CLR     RI0
                     455     ;       ret = S0BUF;
                     456                             ; SOURCE LINE # 70
                     457     ;---- Variable 'ret?344' assigned to Register 'R7' ----
0005 AF99            458             MOV     R7,S0BUF
                     459     ;       return ret;
                     460                             ; SOURCE LINE # 71
                     461     ; }
                     462                             ; SOURCE LINE # 72
0007                 463     ?C0016:
0007 22              464             RET     
                     465     ; END OF epl_uart_getchar
                     466     
                     467     ; 
                     468     ; void epl_uart_putint(unsigned int num) reentrant{
                     469     
----                 470             RSEG  ?PR?_?epl_uart_putint?___LE1_LIB_EPL_EPL_UART
0000                 471     _?epl_uart_putint:
                     472             USING   0
                     473                             ; SOURCE LINE # 74
0000 1500     F      474             DEC     ?C_IBP
0002 1500     F      475             DEC     ?C_IBP
0004 A800     F      476             MOV     R0,?C_IBP
0006 A606            477             MOV     @R0,AR6
0008 08              478             INC     R0
0009 A607            479             MOV     @R0,AR7
000B E500     F      480             MOV     A,?C_IBP
000D 24FC            481             ADD     A,#0FCH
000F F500     F      482             MOV     ?C_IBP,A
                     483     ;         unsigned int t1,t2;
                     484     ;         t1 = num / 10;
                     485                             ; SOURCE LINE # 76
0011 2404            486             ADD     A,#04H
0013 F8              487             MOV     R0,A
0014 E6              488             MOV     A,@R0
0015 FA              489             MOV     R2,A
0016 08              490             INC     R0
0017 E6              491             MOV     A,@R0
0018 FB              492             MOV     R3,A
0019 7C00            493             MOV     R4,#00H
001B 7D0A            494             MOV     R5,#0AH
001D FF              495             MOV     R7,A
001E AE02            496             MOV     R6,AR2
0020 120000   F      497             LCALL   ?C?UIDIV
0023 A800     F      498             MOV     R0,?C_IBP
0025 A606            499             MOV     @R0,AR6
0027 08              500             INC     R0
0028 A607            501             MOV     @R0,AR7
                     502     ;         t2 = num % 10;
                     503                             ; SOURCE LINE # 77
002A 7C00            504             MOV     R4,#00H
002C 7D0A            505             MOV     R5,#0AH
002E AF03            506             MOV     R7,AR3
0030 AE02            507             MOV     R6,AR2
0032 120000   F      508             LCALL   ?C?UIDIV
0035 A800     F      509             MOV     R0,?C_IBP
0037 08              510             INC     R0
0038 08              511             INC     R0
0039 A604            512             MOV     @R0,AR4
003B 08              513             INC     R0
003C A605            514             MOV     @R0,AR5
                     515     ;         
                     516     ;         if(t1)
                     517                             ; SOURCE LINE # 79
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE     9

003E A800     F      518             MOV     R0,?C_IBP
0040 E6              519             MOV     A,@R0
0041 FE              520             MOV     R6,A
0042 08              521             INC     R0
0043 E6              522             MOV     A,@R0
0044 FF              523             MOV     R7,A
0045 4E              524             ORL     A,R6
0046 6003            525             JZ      ?C0017
                     526     ;               epl_uart_putint(t1);
                     527                             ; SOURCE LINE # 80
0048 120000   F      528             LCALL   _?epl_uart_putint
004B                 529     ?C0017:
                     530     ;         
                     531     ;         epl_uart_putchar( t2 + '0');
                     532                             ; SOURCE LINE # 82
004B A800     F      533             MOV     R0,?C_IBP
004D 08              534             INC     R0
004E 08              535             INC     R0
004F A900            536             MOV     R1,AR0
0051 09              537             INC     R1
0052 E7              538             MOV     A,@R1
0053 2430            539             ADD     A,#030H
0055 FF              540             MOV     R7,A
0056 120000   F      541             LCALL   _epl_uart_putchar
                     542     ; }
                     543                             ; SOURCE LINE # 83
0059 E500     F      544             MOV     A,?C_IBP
005B 2406            545             ADD     A,#06H
005D F500     F      546             MOV     ?C_IBP,A
005F 22              547             RET     
                     548     ; END OF _?epl_uart_putint
                     549     
                     550     ; 
                     551     ; void epl_uart_puthex(unsigned int num) reentrant{ 
                     552     
----                 553             RSEG  ?PR?_?epl_uart_puthex?___LE1_LIB_EPL_EPL_UART
0000                 554     _?epl_uart_puthex:
                     555             USING   0
                     556                             ; SOURCE LINE # 85
0000 1500     F      557             DEC     ?C_IBP
0002 1500     F      558             DEC     ?C_IBP
0004 A800     F      559             MOV     R0,?C_IBP
0006 A606            560             MOV     @R0,AR6
0008 08              561             INC     R0
0009 A607            562             MOV     @R0,AR7
000B E500     F      563             MOV     A,?C_IBP
000D 24FC            564             ADD     A,#0FCH
000F F500     F      565             MOV     ?C_IBP,A
                     566     ;         unsigned int t1,t2;
                     567     ;         t1 = num / 16;
                     568                             ; SOURCE LINE # 87
0011 2404            569             ADD     A,#04H
0013 F8              570             MOV     R0,A
0014 E6              571             MOV     A,@R0
0015 FC              572             MOV     R4,A
0016 08              573             INC     R0
0017 E6              574             MOV     A,@R0
0018 FD              575             MOV     R5,A
0019 EC              576             MOV     A,R4
001A C4              577             SWAP    A
001B F8              578             MOV     R0,A
001C 54F0            579             ANL     A,#0F0H
001E C8              580             XCH     A,R0
001F 68              581             XRL     A,R0
0020 FE              582             MOV     R6,A
0021 ED              583             MOV     A,R5
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    10

0022 C4              584             SWAP    A
0023 540F            585             ANL     A,#0FH
0025 48              586             ORL     A,R0
0026 A800     F      587             MOV     R0,?C_IBP
0028 A606            588             MOV     @R0,AR6
002A 08              589             INC     R0
002B F6              590             MOV     @R0,A
                     591     ;         t2 = num % 16;
                     592                             ; SOURCE LINE # 88
002C ED              593             MOV     A,R5
002D 540F            594             ANL     A,#0FH
002F A800     F      595             MOV     R0,?C_IBP
0031 08              596             INC     R0
0032 08              597             INC     R0
0033 7600            598             MOV     @R0,#00H
0035 08              599             INC     R0
0036 F6              600             MOV     @R0,A
                     601     ; 
                     602     ;         if(t1)
                     603                             ; SOURCE LINE # 90
0037 A800     F      604             MOV     R0,?C_IBP
0039 E6              605             MOV     A,@R0
003A FE              606             MOV     R6,A
003B 08              607             INC     R0
003C E6              608             MOV     A,@R0
003D FF              609             MOV     R7,A
003E 4E              610             ORL     A,R6
003F 6005            611             JZ      ?C0019
                     612     ;                 epl_uart_puthex(t1);
                     613                             ; SOURCE LINE # 91
0041 120000   F      614             LCALL   _?epl_uart_puthex
0044 8009            615             SJMP    ?C0020
0046                 616     ?C0019:
                     617     ;         else
                     618     ;                 epl_uart_putstr("0x");
                     619                             ; SOURCE LINE # 93
0046 7BFF            620             MOV     R3,#0FFH
0048 7A00     F      621             MOV     R2,#HIGH (?SC_0)
004A 7900     F      622             MOV     R1,#LOW (?SC_0)
004C 120000   F      623             LCALL   _epl_uart_putstr
004F                 624     ?C0020:
                     625     ; 
                     626     ;         if(t2 >= 10)
                     627                             ; SOURCE LINE # 95
004F A800     F      628             MOV     R0,?C_IBP
0051 08              629             INC     R0
0052 08              630             INC     R0
0053 E6              631             MOV     A,@R0
0054 FE              632             MOV     R6,A
0055 08              633             INC     R0
0056 E6              634             MOV     A,@R0
0057 FF              635             MOV     R7,A
0058 C3              636             CLR     C
0059 940A            637             SUBB    A,#0AH
005B EE              638             MOV     A,R6
005C 9400            639             SUBB    A,#00H
005E 4005            640             JC      ?C0021
                     641     ;                 epl_uart_putchar((t2 - 10) + 'a');
                     642                             ; SOURCE LINE # 96
0060 EF              643             MOV     A,R7
0061 2457            644             ADD     A,#057H
0063 800A            645             SJMP    ?C0028
0065                 646     ?C0021:
                     647     ;         else
                     648     ;                 epl_uart_putchar(t2 + '0');
                     649                             ; SOURCE LINE # 98
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    11

0065 A800     F      650             MOV     R0,?C_IBP
0067 08              651             INC     R0
0068 08              652             INC     R0
0069 A900            653             MOV     R1,AR0
006B 09              654             INC     R1
006C E7              655             MOV     A,@R1
006D 2430            656             ADD     A,#030H
006F                 657     ?C0028:
006F FF              658             MOV     R7,A
0070 120000   F      659             LCALL   _epl_uart_putchar
                     660     ; }
                     661                             ; SOURCE LINE # 99
0073                 662     ?C0023:
0073 E500     F      663             MOV     A,?C_IBP
0075 2406            664             ADD     A,#06H
0077 F500     F      665             MOV     ?C_IBP,A
0079 22              666             RET     
                     667     ; END OF _?epl_uart_puthex
                     668     
                     669     ; 
                     670     ; int epl_uart_rcv_buf_is_empty(void)
                     671     
----                 672             RSEG  ?PR?epl_uart_rcv_buf_is_empty?___LE1_LIB_EPL_EPL_UART
0000                 673     epl_uart_rcv_buf_is_empty:
                     674             USING   0
                     675                             ; SOURCE LINE # 101
                     676     ; {
                     677                             ; SOURCE LINE # 102
                     678     ;       if (RI0)
                     679                             ; SOURCE LINE # 103
0000 309804          680             JNB     RI0,?C0024
                     681     ;               return 0;
                     682                             ; SOURCE LINE # 104
0003 E4              683             CLR     A
0004 FE              684             MOV     R6,A
0005 FF              685             MOV     R7,A
0006 22              686             RET     
0007                 687     ?C0024:
                     688     ;       else
                     689     ;               return 1;
                     690                             ; SOURCE LINE # 106
0007 7E00            691             MOV     R6,#00H
0009 7F01            692             MOV     R7,#01H
                     693     ; }
                     694                             ; SOURCE LINE # 107
000B                 695     ?C0025:
000B 22              696             RET     
                     697     ; END OF epl_uart_rcv_buf_is_empty
                     698     
                     699             END
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    12

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . . . . . . . . .    C ADDR   002EH   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
?C0002. . . . . . . . . . . . . . . . .    C ADDR   0018H   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
?C0003. . . . . . . . . . . . . . . . .    C ADDR   001EH   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
?C0004. . . . . . . . . . . . . . . . .    C ADDR   0024H   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
?C0006. . . . . . . . . . . . . . . . .    C ADDR   002AH   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
?C0008. . . . . . . . . . . . . . . . .    C ADDR   0002H   R   SEG=?PR?_EPL_UART_PUTCHAR?___LE1_LIB_EPL_EPL_UART
?C0009. . . . . . . . . . . . . . . . .    C ADDR   0005H   R   SEG=?PR?_EPL_UART_PUTCHAR?___LE1_LIB_EPL_EPL_UART
?C0011. . . . . . . . . . . . . . . . .    C ADDR   0006H   R   SEG=?PR?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
?C0013. . . . . . . . . . . . . . . . .    C ADDR   0024H   R   SEG=?PR?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
?C0014. . . . . . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?EPL_UART_GETCHAR?___LE1_LIB_EPL_EPL_UART
?C0015. . . . . . . . . . . . . . . . .    C ADDR   0003H   R   SEG=?PR?EPL_UART_GETCHAR?___LE1_LIB_EPL_EPL_UART
?C0016. . . . . . . . . . . . . . . . .    C ADDR   0007H   R   SEG=?PR?EPL_UART_GETCHAR?___LE1_LIB_EPL_EPL_UART
?C0017. . . . . . . . . . . . . . . . .    C ADDR   004BH   R   SEG=?PR?_?EPL_UART_PUTINT?___LE1_LIB_EPL_EPL_UART
?C0019. . . . . . . . . . . . . . . . .    C ADDR   0046H   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
?C0020. . . . . . . . . . . . . . . . .    C ADDR   004FH   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
?C0021. . . . . . . . . . . . . . . . .    C ADDR   0065H   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
?C0023. . . . . . . . . . . . . . . . .    C ADDR   0073H   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
?C0024. . . . . . . . . . . . . . . . .    C ADDR   0007H   R   SEG=?PR?EPL_UART_RCV_BUF_IS_EMPTY?___LE1_LIB_EPL_EPL_UAR
                                         T
?C0025. . . . . . . . . . . . . . . . .    C ADDR   000BH   R   SEG=?PR?EPL_UART_RCV_BUF_IS_EMPTY?___LE1_LIB_EPL_EPL_UAR
                                         T
?C0027. . . . . . . . . . . . . . . . .    C ADDR   0019H   R   SEG=?PR?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
?C0028. . . . . . . . . . . . . . . . .    C ADDR   006FH   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
?C?CLDPTR . . . . . . . . . . . . . . .    C ADDR   -----       EXT
?C?UIDIV. . . . . . . . . . . . . . . .    C ADDR   -----       EXT
?CO?___LE1_LIB_EPL_EPL_UART . . . . . .    C SEG    0003H       REL=UNIT
?C_IBP. . . . . . . . . . . . . . . . .    D ADDR   -----       EXT
?DT?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UARD SEG    0003H       REL=UNIT
?PR?EPL_UART_GETCHAR?___LE1_LIB_EPL_EPL_UARC SEG    0008H       REL=UNIT
?PR?EPL_UART_RCV_BUF_IS_EMPTY?___LE1_LIB_EPC SEG UAR000CH       REL=UNIT
?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UAC SEG    007AH       REL=UNIT
?PR?_?EPL_UART_PUTINT?___LE1_LIB_EPL_EPL_UAC SEG    0060H       REL=UNIT
?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART C SEG    003DH       REL=UNIT
?PR?_EPL_UART_PUTCHAR?___LE1_LIB_EPL_EPL_UAC SEG    0008H       REL=UNIT
?PR?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UARC SEG    0025H       REL=UNIT
?SC_0 . . . . . . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?CO?___LE1_LIB_EPL_EPL_UART
?_EPL_UART_PUTSTR?BYTE. . . . . . . . .    D ADDR   0000H   R   SEG=?DT?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
AC. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.6 A   
ACC . . . . . . . . . . . . . . . . . .    D ADDR   00E0H   A   
ADCCON1 . . . . . . . . . . . . . . . .    D ADDR   00D3H   A   
ADCCON2 . . . . . . . . . . . . . . . .    D ADDR   00D2H   A   
ADCCON3 . . . . . . . . . . . . . . . .    D ADDR   00D1H   A   
ADCDATH . . . . . . . . . . . . . . . .    D ADDR   00D4H   A   
ADCDATL . . . . . . . . . . . . . . . .    D ADDR   00D5H   A   
ADCON . . . . . . . . . . . . . . . . .    D ADDR   00D8H   A   
AR0 . . . . . . . . . . . . . . . . . .    D ADDR   0000H   A   
AR2 . . . . . . . . . . . . . . . . . .    D ADDR   0002H   A   
AR3 . . . . . . . . . . . . . . . . . .    D ADDR   0003H   A   
AR4 . . . . . . . . . . . . . . . . . .    D ADDR   0004H   A   
AR5 . . . . . . . . . . . . . . . . . .    D ADDR   0005H   A   
AR6 . . . . . . . . . . . . . . . . . .    D ADDR   0006H   A   
AR7 . . . . . . . . . . . . . . . . . .    D ADDR   0007H   A   
ARCON . . . . . . . . . . . . . . . . .    D ADDR   00EFH   A   
B . . . . . . . . . . . . . . . . . . .    D ADDR   00F0H   A   
BD. . . . . . . . . . . . . . . . . . .    B ADDR   00D8H.7 A   
CC1 . . . . . . . . . . . . . . . . . .    D ADDR   00C2H   A   
CC2 . . . . . . . . . . . . . . . . . .    D ADDR   00C4H   A   
CC3 . . . . . . . . . . . . . . . . . .    D ADDR   00C6H   A   
CCEN. . . . . . . . . . . . . . . . . .    D ADDR   00C1H   A   
CCH1. . . . . . . . . . . . . . . . . .    D ADDR   00C3H   A   
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    13

CCH2. . . . . . . . . . . . . . . . . .    D ADDR   00C5H   A   
CCH3. . . . . . . . . . . . . . . . . .    D ADDR   00C7H   A   
CCL1. . . . . . . . . . . . . . . . . .    D ADDR   00C2H   A   
CCL2. . . . . . . . . . . . . . . . . .    D ADDR   00C4H   A   
CCL3. . . . . . . . . . . . . . . . . .    D ADDR   00C6H   A   
CCPDATIA. . . . . . . . . . . . . . . .    D ADDR   00DDH   A   
CCPDATIB. . . . . . . . . . . . . . . .    D ADDR   00DEH   A   
CCPDATO . . . . . . . . . . . . . . . .    D ADDR   00DFH   A   
CLKCTRL . . . . . . . . . . . . . . . .    D ADDR   00A3H   A   
CLKLFCTRL . . . . . . . . . . . . . . .    D ADDR   00ADH   A   
COMPCON . . . . . . . . . . . . . . . .    D ADDR   00DBH   A   
CRC . . . . . . . . . . . . . . . . . .    D ADDR   00CAH   A   
CRCH. . . . . . . . . . . . . . . . . .    D ADDR   00CBH   A   
CRCL. . . . . . . . . . . . . . . . . .    D ADDR   00CAH   A   
CY. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.7 A   
DPH . . . . . . . . . . . . . . . . . .    D ADDR   0083H   A   
DPH1. . . . . . . . . . . . . . . . . .    D ADDR   0085H   A   
DPL . . . . . . . . . . . . . . . . . .    D ADDR   0082H   A   
DPL1. . . . . . . . . . . . . . . . . .    D ADDR   0084H   A   
DPS . . . . . . . . . . . . . . . . . .    D ADDR   0092H   A   
EA. . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.7 A   
EPL_UART_GETCHAR. . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?EPL_UART_GETCHAR?___LE1_LIB_EPL_EPL_UART
EPL_UART_RCV_BUF_IS_EMPTY . . . . . . .    C ADDR   0000H   R   SEG=?PR?EPL_UART_RCV_BUF_IS_EMPTY?___LE1_LIB_EPL_EPL_UAR
                                         T
ES0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.5 A   
EX0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.2 A   
EXEN2 . . . . . . . . . . . . . . . . .    B ADDR   00B8H.7 A   
EXF2. . . . . . . . . . . . . . . . . .    B ADDR   00C0H.7 A   
F0. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.5 A   
FCR . . . . . . . . . . . . . . . . . .    D ADDR   00FAH   A   
FDCR. . . . . . . . . . . . . . . . . .    D ADDR   00FBH   A   
FPCR. . . . . . . . . . . . . . . . . .    D ADDR   00F9H   A   
FSR . . . . . . . . . . . . . . . . . .    D ADDR   00F8H   A   
I2FR. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.5 A   
I3FR. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.6 A   
IE0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.1 A   
IE1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.3 A   
IEN0. . . . . . . . . . . . . . . . . .    D ADDR   00A8H   A   
IEN1. . . . . . . . . . . . . . . . . .    D ADDR   00B8H   A   
INFEN . . . . . . . . . . . . . . . . .    B ADDR   00F8H.3 A   
INTEXP. . . . . . . . . . . . . . . . .    D ADDR   00A6H   A   
IP0 . . . . . . . . . . . . . . . . . .    D ADDR   00A9H   A   
IP1 . . . . . . . . . . . . . . . . . .    D ADDR   00B9H   A   
IRCON . . . . . . . . . . . . . . . . .    D ADDR   00C0H   A   
IT0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.0 A   
IT1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.2 A   
MCDIS . . . . . . . . . . . . . . . . .    B ADDR   00F8H.7 A   
MD0 . . . . . . . . . . . . . . . . . .    D ADDR   00E9H   A   
MD1 . . . . . . . . . . . . . . . . . .    D ADDR   00EAH   A   
MD2 . . . . . . . . . . . . . . . . . .    D ADDR   00EBH   A   
MD3 . . . . . . . . . . . . . . . . . .    D ADDR   00ECH   A   
MD4 . . . . . . . . . . . . . . . . . .    D ADDR   00EDH   A   
MD5 . . . . . . . . . . . . . . . . . .    D ADDR   00EEH   A   
MEMCON. . . . . . . . . . . . . . . . .    D ADDR   00A7H   A   
MISC. . . . . . . . . . . . . . . . . .    B ADDR   00B8H.4 A   
MISCF . . . . . . . . . . . . . . . . .    B ADDR   00C0H.4 A   
MPAGE . . . . . . . . . . . . . . . . .    D ADDR   00C9H   A   
OPMCON. . . . . . . . . . . . . . . . .    D ADDR   00AEH   A   
OV. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.2 A   
P . . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.0 A   
P0. . . . . . . . . . . . . . . . . . .    D ADDR   0080H   A   
P00 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.0 A   
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    14

P01 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.1 A   
P02 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.2 A   
P03 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.3 A   
P04 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.4 A   
P05 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.5 A   
P06 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.6 A   
P07 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.7 A   
P0CON . . . . . . . . . . . . . . . . .    D ADDR   009EH   A   
P0DIR . . . . . . . . . . . . . . . . .    D ADDR   0093H   A   
P1. . . . . . . . . . . . . . . . . . .    D ADDR   0090H   A   
P10 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.0 A   
P11 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.1 A   
P12 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.2 A   
P13 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.3 A   
P14 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.4 A   
P15 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.5 A   
P16 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.6 A   
P17 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.7 A   
P1CON . . . . . . . . . . . . . . . . .    D ADDR   009FH   A   
P1DIR . . . . . . . . . . . . . . . . .    D ADDR   0094H   A   
P2. . . . . . . . . . . . . . . . . . .    D ADDR   00A0H   A   
P20 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.0 A   
P21 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.1 A   
P22 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.2 A   
P23 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.3 A   
P24 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.4 A   
P25 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.5 A   
P26 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.6 A   
P27 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.7 A   
P2CON . . . . . . . . . . . . . . . . .    D ADDR   0097H   A   
P2DIR . . . . . . . . . . . . . . . . .    D ADDR   0095H   A   
P3. . . . . . . . . . . . . . . . . . .    D ADDR   00B0H   A   
P30 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.0 A   
P31 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.1 A   
P32 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.2 A   
P33 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.3 A   
P34 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.4 A   
P35 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.5 A   
P36 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.6 A   
P37 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.7 A   
P3CON . . . . . . . . . . . . . . . . .    D ADDR   008FH   A   
P3DIR . . . . . . . . . . . . . . . . .    D ADDR   0096H   A   
PCON. . . . . . . . . . . . . . . . . .    D ADDR   0087H   A   
POFCON. . . . . . . . . . . . . . . . .    D ADDR   00DCH   A   
PSW . . . . . . . . . . . . . . . . . .    D ADDR   00D0H   A   
PWMCON. . . . . . . . . . . . . . . . .    D ADDR   00B2H   A   
PWMDC0. . . . . . . . . . . . . . . . .    D ADDR   00A1H   A   
PWMDC1. . . . . . . . . . . . . . . . .    D ADDR   00A2H   A   
PWRDWN. . . . . . . . . . . . . . . . .    D ADDR   00A4H   A   
RB80. . . . . . . . . . . . . . . . . .    B ADDR   0098H.2 A   
RDEND . . . . . . . . . . . . . . . . .    B ADDR   00F8H.1 A   
RDIS. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.2 A   
RDYN. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.4 A   
REN0. . . . . . . . . . . . . . . . . .    B ADDR   0098H.4 A   
RF. . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.1 A   
RFCE. . . . . . . . . . . . . . . . . .    B ADDR   00E8H.0 A   
RFCKEN. . . . . . . . . . . . . . . . .    B ADDR   00E8H.2 A   
RFCON . . . . . . . . . . . . . . . . .    D ADDR   00E8H   A   
RFCSN . . . . . . . . . . . . . . . . .    B ADDR   00E8H.1 A   
RFF . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.1 A   
RFSPI . . . . . . . . . . . . . . . . .    B ADDR   00B8H.0 A   
RFSPIF. . . . . . . . . . . . . . . . .    B ADDR   00C0H.0 A   
RI0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.0 A   
RNGCTL. . . . . . . . . . . . . . . . .    D ADDR   00D6H   A   
RNGDAT. . . . . . . . . . . . . . . . .    D ADDR   00D7H   A   
RS0 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.3 A   
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    15

RS1 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.4 A   
RSTREAS . . . . . . . . . . . . . . . .    D ADDR   00B1H   A   
RTC2CMP0. . . . . . . . . . . . . . . .    D ADDR   00B4H   A   
RTC2CMP1. . . . . . . . . . . . . . . .    D ADDR   00B5H   A   
RTC2CON . . . . . . . . . . . . . . . .    D ADDR   00B3H   A   
RTC2CPT00 . . . . . . . . . . . . . . .    D ADDR   00B6H   A   
RTC2CPT01 . . . . . . . . . . . . . . .    D ADDR   00ABH   A   
RTC2CPT10 . . . . . . . . . . . . . . .    D ADDR   00ACH   A   
S0BUF . . . . . . . . . . . . . . . . .    D ADDR   0099H   A   
S0CON . . . . . . . . . . . . . . . . .    D ADDR   0098H   A   
S0RELH. . . . . . . . . . . . . . . . .    D ADDR   00BAH   A   
S0RELL. . . . . . . . . . . . . . . . .    D ADDR   00AAH   A   
SM0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.7 A   
SM1 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.6 A   
SM20. . . . . . . . . . . . . . . . . .    B ADDR   0098H.5 A   
SP. . . . . . . . . . . . . . . . . . .    D ADDR   0081H   A   
SPI . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.2 A   
SPIF. . . . . . . . . . . . . . . . . .    B ADDR   00C0H.2 A   
SPIMCON0. . . . . . . . . . . . . . . .    D ADDR   00FCH   A   
SPIMCON1. . . . . . . . . . . . . . . .    D ADDR   00FDH   A   
SPIMDAT . . . . . . . . . . . . . . . .    D ADDR   00FFH   A   
SPIMSTAT. . . . . . . . . . . . . . . .    D ADDR   00FEH   A   
SPIRCON0. . . . . . . . . . . . . . . .    D ADDR   00E4H   A   
SPIRCON1. . . . . . . . . . . . . . . .    D ADDR   00E5H   A   
SPIRDAT . . . . . . . . . . . . . . . .    D ADDR   00E7H   A   
SPIRSTAT. . . . . . . . . . . . . . . .    D ADDR   00E6H   A   
SPISCON0. . . . . . . . . . . . . . . .    D ADDR   00BCH   A   
SPISCON1. . . . . . . . . . . . . . . .    D ADDR   00BDH   A   
SPISDAT . . . . . . . . . . . . . . . .    D ADDR   00BFH   A   
SPISRDSZ. . . . . . . . . . . . . . . .    D ADDR   00B7H   A   
SPISSTAT. . . . . . . . . . . . . . . .    D ADDR   00BEH   A   
STP . . . . . . . . . . . . . . . . . .    B ADDR   00F8H.6 A   
STR?243 . . . . . . . . . . . . . . . .    D ADDR   0000H   R   SEG=?DT?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
T2. . . . . . . . . . . . . . . . . . .    D ADDR   00CCH   A   
T2CM. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.2 A   
T2CON . . . . . . . . . . . . . . . . .    D ADDR   00C8H   A   
T2I0. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.0 A   
T2I1. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.1 A   
T2PS. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.7 A   
T2R0. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.3 A   
T2R1. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.4 A   
TB80. . . . . . . . . . . . . . . . . .    B ADDR   0098H.3 A   
TCON. . . . . . . . . . . . . . . . . .    D ADDR   0088H   A   
TF0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.5 A   
TF1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.7 A   
TF2 . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.6 A   
TH0 . . . . . . . . . . . . . . . . . .    D ADDR   008CH   A   
TH1 . . . . . . . . . . . . . . . . . .    D ADDR   008DH   A   
TH2 . . . . . . . . . . . . . . . . . .    D ADDR   00CDH   A   
TI0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.1 A   
TL0 . . . . . . . . . . . . . . . . . .    D ADDR   008AH   A   
TL1 . . . . . . . . . . . . . . . . . .    D ADDR   008BH   A   
TL2 . . . . . . . . . . . . . . . . . .    D ADDR   00CCH   A   
TMOD. . . . . . . . . . . . . . . . . .    D ADDR   0089H   A   
TR0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.4 A   
TR1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.6 A   
W2CON0. . . . . . . . . . . . . . . . .    D ADDR   00E2H   A   
W2CON1. . . . . . . . . . . . . . . . .    D ADDR   00E1H   A   
W2DAT . . . . . . . . . . . . . . . . .    D ADDR   00DAH   A   
W2SADR. . . . . . . . . . . . . . . . .    D ADDR   00D9H   A   
WDSV. . . . . . . . . . . . . . . . . .    D ADDR   00AFH   A   
WEN . . . . . . . . . . . . . . . . . .    B ADDR   00F8H.5 A   
WPEN. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.0 A   
WUCON . . . . . . . . . . . . . . . . .    D ADDR   00A5H   A   
WUF . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.5 A   
WUIRQ . . . . . . . . . . . . . . . . .    B ADDR   00B8H.5 A   
A51 MACRO ASSEMBLER  ___LE1_LIB_EPL_EPL_UART                                              06/03/2010 14:40:49 PAGE    16

WUOPC0. . . . . . . . . . . . . . . . .    D ADDR   00CFH   A   
WUOPC1. . . . . . . . . . . . . . . . .    D ADDR   00CEH   A   
WUPIN . . . . . . . . . . . . . . . . .    B ADDR   00B8H.3 A   
WUPINF. . . . . . . . . . . . . . . . .    B ADDR   00C0H.3 A   
_?EPL_UART_PUTHEX . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_?EPL_UART_PUTHEX?___LE1_LIB_EPL_EPL_UART
_?EPL_UART_PUTINT . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_?EPL_UART_PUTINT?___LE1_LIB_EPL_EPL_UART
_EPL_UART_INIT. . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_EPL_UART_INIT?___LE1_LIB_EPL_EPL_UART
_EPL_UART_PUTCHAR . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_EPL_UART_PUTCHAR?___LE1_LIB_EPL_EPL_UART
_EPL_UART_PUTSTR. . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_EPL_UART_PUTSTR?___LE1_LIB_EPL_EPL_UART
___LE1_LIB_EPL_EPL_UART . . . . . . . .    N NUMB   -----       


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
