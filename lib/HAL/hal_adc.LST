A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN ../LE1/lib/HAL/hal_adc.OBJ
ASSEMBLER INVOKED BY: C:\KEIL\C51\BIN\A51.exe ../LE1/lib/HAL/hal_adc.src

LOC  OBJ            LINE     SOURCE

                       1     ; ../LE1/lib/HAL/hal_adc.SRC generated from: ../LE1/lib/HAL/hal_adc.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\KEIL\C51\BIN\C51.exe ../LE1/lib/HAL/hal_adc.c INCDIR(../LE1/include) BROWSE DEB
                             UG CD SB OMF2 WL(0) PREPRINT SRC
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    ___LE1_LIB_HAL_HAL_ADC
                       8     
  009B                 9     TB80    BIT     098H.3
  00BE                10     SPISSTAT        DATA    0BEH
  00C8                11     T2I0    BIT     0C8H.0
  00C3                12     CCH1    DATA    0C3H
  0080                13     P0      DATA    080H
  00C9                14     T2I1    BIT     0C8H.1
  00DF                15     CCPDATO DATA    0DFH
  00C5                16     CCH2    DATA    0C5H
  0090                17     P1      DATA    090H
  00C7                18     CCH3    DATA    0C7H
  00A0                19     P2      DATA    0A0H
  009D                20     SM20    BIT     098H.5
  00B0                21     P3      DATA    0B0H
  00D6                22     AC      BIT     0D0H.6
  00C2                23     CCL1    DATA    0C2H
  00C4                24     CCL2    DATA    0C4H
  00DF                25     BD      BIT     0D8H.7
  00B8                26     RFSPI   BIT     0B8H.0
  00AF                27     EA      BIT     0A8H.7
  00CC                28     T2      DATA    0CCH
  00C6                29     CCL3    DATA    0C6H
  00B7                30     SPISRDSZ        DATA    0B7H
  00CB                31     T2R0    BIT     0C8H.3
  00CC                32     T2R1    BIT     0C8H.4
  00A8                33     IEN0    DATA    0A8H
  00B8                34     IEN1    DATA    0B8H
  00A5                35     WUCON   DATA    0A5H
  0085                36     DPH1    DATA    085H
  00DB                37     COMPCON DATA    0DBH
  00A3                38     CLKCTRL DATA    0A3H
  0084                39     DPL1    DATA    084H
  00CD                40     I2FR    BIT     0C8H.5
  00BB                41     WUPIN   BIT     0B8H.3
  00CE                42     I3FR    BIT     0C8H.6
  00FF                43     SPIMDAT DATA    0FFH
  00C7                44     EXF2    BIT     0C0H.7
  009C                45     REN0    BIT     098H.4
  00CA                46     T2CM    BIT     0C8H.2
  00B9                47     RF      BIT     0B8H.1
  00BD                48     WUIRQ   BIT     0B8H.5
  00E7                49     SPIRDAT DATA    0E7H
  00C1                50     CCEN    DATA    0C1H
  00E2                51     W2CON0  DATA    0E2H
  00BF                52     SPISDAT DATA    0BFH
  00D7                53     CY      BIT     0D0H.7
  00E1                54     W2CON1  DATA    0E1H
  00FB                55     FDCR    DATA    0FBH
  00E8                56     RFCE    BIT     0E8H.0
  00CB                57     CRCH    DATA    0CBH
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     2

  0081                58     SP      DATA    081H
  00D2                59     OV      BIT     0D0H.2
  00CA                60     CRCL    DATA    0CAH
  00AD                61     CLKLFCTRL       DATA    0ADH
  00B1                62     RSTREAS DATA    0B1H
  00CF                63     T2PS    BIT     0C8H.7
  00F9                64     FPCR    DATA    0F9H
  00BC                65     MISC    BIT     0B8H.4
  00A1                66     PWMDC0  DATA    0A1H
  00B4                67     RTC2CMP0        DATA    0B4H
  00A2                68     PWMDC1  DATA    0A2H
  00B5                69     RTC2CMP1        DATA    0B5H
  0080                70     P00     BIT     080H.0
  00BA                71     S0RELH  DATA    0BAH
  0090                72     P10     BIT     090H.0
  0081                73     P01     BIT     080H.1
  0087                74     PCON    DATA    087H
  00A0                75     P20     BIT     0A0H.0
  0091                76     P11     BIT     090H.1
  0082                77     P02     BIT     080H.2
  00B0                78     P30     BIT     0B0H.0
  00A1                79     P21     BIT     0A0H.1
  0092                80     P12     BIT     090H.2
  0083                81     P03     BIT     080H.3
  00C2                82     SPIF    BIT     0C0H.2
  00FA                83     RDIS    BIT     0F8H.2
  00B1                84     P31     BIT     0B0H.1
  00A2                85     P22     BIT     0A0H.2
  0093                86     P13     BIT     090H.3
  0084                87     P04     BIT     080H.4
  00AA                88     S0RELL  DATA    0AAH
  00B2                89     P32     BIT     0B0H.2
  00A3                90     P23     BIT     0A0H.3
  0094                91     P14     BIT     090H.4
  0085                92     P05     BIT     080H.5
  00D9                93     W2SADR  DATA    0D9H
  0089                94     TMOD    DATA    089H
  0088                95     TCON    DATA    088H
  00B3                96     P33     BIT     0B0H.3
  00A4                97     P24     BIT     0A0H.4
  0095                98     P15     BIT     090H.5
  0086                99     P06     BIT     080H.6
  00B4               100     P34     BIT     0B0H.4
  00A5               101     P25     BIT     0A0H.5
  0096               102     P16     BIT     090H.6
  0087               103     P07     BIT     080H.7
  00C2               104     CC1     DATA    0C2H
  00B5               105     P35     BIT     0B0H.5
  00A6               106     P26     BIT     0A0H.6
  0097               107     P17     BIT     090H.7
  00C4               108     CC2     DATA    0C4H
  00B6               109     P36     BIT     0B0H.6
  00A7               110     P27     BIT     0A0H.7
  00C6               111     CC3     DATA    0C6H
  00B7               112     P37     BIT     0B0H.7
  00EA               113     RFCKEN  BIT     0E8H.2
  00F8               114     WPEN    BIT     0F8H.0
  00DD               115     CCPDATIA        DATA    0DDH
  00DE               116     CCPDATIB        DATA    0DEH
  0089               117     IE0     BIT     088H.1
  00FC               118     RDYN    BIT     0F8H.4
  008B               119     IE1     BIT     088H.3
  00CF               120     WUOPC0  DATA    0CFH
  00F0               121     B       DATA    0F0H
  00E9               122     MD0     DATA    0E9H
  00CE               123     WUOPC1  DATA    0CEH
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     3

  00A7               124     MEMCON  DATA    0A7H
  00EA               125     MD1     DATA    0EAH
  00D7               126     RNGDAT  DATA    0D7H
  00EB               127     MD2     DATA    0EBH
  00EC               128     MD3     DATA    0ECH
  00ED               129     MD4     DATA    0EDH
  00AF               130     WDSV    DATA    0AFH
  00EE               131     MD5     DATA    0EEH
  00E0               132     ACC     DATA    0E0H
  00DC               133     POFCON  DATA    0DCH
  00AC               134     ES0     BIT     0A8H.4
  00A9               135     ET0     BIT     0A8H.1
  00A9               136     IP0     DATA    0A9H
  00AB               137     ET1     BIT     0A8H.3
  008D               138     TF0     BIT     088H.5
  00B9               139     IP1     DATA    0B9H
  00AD               140     ET2     BIT     0A8H.5
  0098               141     RI0     BIT     098H.0
  008F               142     TF1     BIT     088H.7
  00C0               143     RFSPIF  BIT     0C0H.0
  00C6               144     TF2     BIT     0C0H.6
  00FC               145     SPIMCON0        DATA    0FCH
  00D6               146     RNGCTL  DATA    0D6H
  008C               147     TH0     DATA    08CH
  00A8               148     EX0     BIT     0A8H.0
  0099               149     TI0     BIT     098H.1
  0088               150     IT0     BIT     088H.0
  00FD               151     SPIMCON1        DATA    0FDH
  008D               152     TH1     DATA    08DH
  00AA               153     EX1     BIT     0A8H.2
  008A               154     IT1     BIT     088H.2
  00CD               155     TH2     DATA    0CDH
  00AE               156     OPMCON  DATA    0AEH
  00D0               157     P       BIT     0D0H.0
  009F               158     SM0     BIT     098H.7
  008A               159     TL0     DATA    08AH
  009E               160     SM1     BIT     098H.6
  00E4               161     SPIRCON0        DATA    0E4H
  008B               162     TL1     DATA    08BH
  00E5               163     SPIRCON1        DATA    0E5H
  00CC               164     TL2     DATA    0CCH
  00BC               165     SPISCON0        DATA    0BCH
  00BD               166     SPISCON1        DATA    0BDH
  00D3               167     RS0     BIT     0D0H.3
  008C               168     TR0     BIT     088H.4
  00D4               169     RS1     BIT     0D0H.4
  00B2               170     PWMCON  DATA    0B2H
  008E               171     TR1     BIT     088H.6
  00CA               172     CRC     DATA    0CAH
  00A6               173     INTEXP  DATA    0A6H
  00C3               174     WUPINF  BIT     0C0H.3
  00FA               175     FCR     DATA    0FAH
  00D3               176     ADCCON1 DATA    0D3H
  00D2               177     ADCCON2 DATA    0D2H
  0083               178     DPH     DATA    083H
  00D1               179     ADCCON3 DATA    0D1H
  00C1               180     RFF     BIT     0C0H.1
  0093               181     P0DIR   DATA    093H
  0082               182     DPL     DATA    082H
  009E               183     P0CON   DATA    09EH
  0099               184     S0BUF   DATA    099H
  0094               185     P1DIR   DATA    094H
  009F               186     P1CON   DATA    09FH
  0095               187     P2DIR   DATA    095H
  00BF               188     EXEN2   BIT     0B8H.7
  00DA               189     W2DAT   DATA    0DAH
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     4

  0097               190     P2CON   DATA    097H
  0096               191     P3DIR   DATA    096H
  00A4               192     PWRDWN  DATA    0A4H
  0098               193     S0CON   DATA    098H
  008F               194     P3CON   DATA    08FH
  00B6               195     RTC2CPT00       DATA    0B6H
  00D8               196     ADCON   DATA    0D8H
  00AC               197     RTC2CPT10       DATA    0ACH
  00AB               198     RTC2CPT01       DATA    0ABH
  00C8               199     T2CON   DATA    0C8H
  0092               200     DPS     DATA    092H
  00FD               201     WEN     BIT     0F8H.5
  00F8               202     FSR     DATA    0F8H
  00D4               203     ADCDATH DATA    0D4H
  00C9               204     MPAGE   DATA    0C9H
  00BA               205     SPI     BIT     0B8H.2
  00F9               206     RDEND   BIT     0F8H.1
  00D5               207     ADCDATL DATA    0D5H
  00FB               208     INFEN   BIT     0F8H.3
  00FF               209     MCDIS   BIT     0F8H.7
  00C5               210     WUF     BIT     0C0H.5
  00C4               211     MISCF   BIT     0C0H.4
  00EF               212     ARCON   DATA    0EFH
  00D5               213     F0      BIT     0D0H.5
  00FE               214     STP     BIT     0F8H.6
  00FE               215     SPIMSTAT        DATA    0FEH
  00E8               216     RFCON   DATA    0E8H
  00D0               217     PSW     DATA    0D0H
  009A               218     RB80    BIT     098H.2
  00C0               219     IRCON   DATA    0C0H
  00E9               220     RFCSN   BIT     0E8H.1
  00E6               221     SPIRSTAT        DATA    0E6H
  00B3               222     RTC2CON DATA    0B3H
                     223     ?PR?_hal_adc_set_input_channel?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     224     ?PR?_hal_adc_set_reference?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     225     ?PR?_hal_adc_set_input_mode?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     226     ?PR?_hal_adc_set_conversion_mode?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     227     ?PR?_hal_adc_set_sampling_rate?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     228     ?PR?_hal_adc_set_power_down_delay?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     229     ?PR?_hal_adc_set_acq_window?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     230     ?PR?_hal_adc_set_resolution?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     231     ?PR?_hal_adc_set_data_just?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     232     ?PR?hal_adc_start?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     233     ?PR?hal_adc_read_LSB?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     234     ?PR?hal_adc_read_MSB?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     235     ?PR?hal_adc_busy?___LE1_LIB_HAL_HAL_ADC  SEGMENT CODE 
                     236     ?PR?hal_adc_get_overflow_status?___LE1_LIB_HAL_HAL_ADC SEGMENT CODE 
                     237             PUBLIC  hal_adc_get_overflow_status
                     238             PUBLIC  hal_adc_busy
                     239             PUBLIC  hal_adc_read_MSB
                     240             PUBLIC  hal_adc_read_LSB
                     241             PUBLIC  hal_adc_start
                     242             PUBLIC  _hal_adc_set_data_just
                     243             PUBLIC  _hal_adc_set_resolution
                     244             PUBLIC  _hal_adc_set_acq_window
                     245             PUBLIC  _hal_adc_set_power_down_delay
                     246             PUBLIC  _hal_adc_set_sampling_rate
                     247             PUBLIC  _hal_adc_set_conversion_mode
                     248             PUBLIC  _hal_adc_set_input_mode
                     249             PUBLIC  _hal_adc_set_reference
                     250             PUBLIC  _hal_adc_set_input_channel
                     251     ; /* Copyright (c) 2008 Nordic Semiconductor. All Rights Reserved.
                     252     ;  *
                     253     ;  * The information contained herein is property of Nordic Semiconductor ASA.
                     254     ;  * Terms and conditions of usage are described in detail in NORDIC
                     255     ;  * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     5

                     256     ;  *
                     257     ;  * Licensees are granted free, non-transferable use of the information. NO
                     258     ;  * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
                     259     ;  * the file.
                     260     ;  *
                     261     ;  * $LastChangedRevision$
                     262     ;  */ 
                     263     ; 
                     264     ; /** @file
                     265     ;  * @brief Implementation of hal_adc
                     266     ;  */
                     267     ; 
                     268     ; #include <stdint.h>
                     269     ; #include <stdbool.h>
                     270     ; 
                     271     ; #include <Nordic/reg24le1.h>
                     272     ; #include <HAL/nordic_common.h>
                     273     ; #include <HAL/hal_adc.h>
                     274     ; 
                     275     ; 
                     276     ; void hal_adc_set_input_channel(hal_adc_input_channel_t chsel)
                     277     
----                 278             RSEG  ?PR?_hal_adc_set_input_channel?___LE1_LIB_HAL_HAL_ADC
0000                 279     _hal_adc_set_input_channel:
                     280             USING   0
                     281                             ; SOURCE LINE # 26
                     282     ;---- Variable 'chsel?040' assigned to Register 'R7' ----
                     283     ; { // Update "chsel" bits
                     284                             ; SOURCE LINE # 27
                     285     ;   ADCCON1 = ((ADCCON1 & 0xC3) | (((unsigned char)(chsel) << 2) & ~0xC3));       
                     286                             ; SOURCE LINE # 28
0000 EF              287             MOV     A,R7
0001 25E0            288             ADD     A,ACC
0003 25E0            289             ADD     A,ACC
0005 543C            290             ANL     A,#03CH
0007 FF              291             MOV     R7,A
0008 E5D3            292             MOV     A,ADCCON1
000A 54C3            293             ANL     A,#0C3H
000C 4F              294             ORL     A,R7
000D F5D3            295             MOV     ADCCON1,A
                     296     ; }
                     297                             ; SOURCE LINE # 29
000F 22              298             RET     
                     299     ; END OF _hal_adc_set_input_channel
                     300     
                     301     ; 
                     302     ; 
                     303     ; void hal_adc_set_reference(hal_adc_reference_t refsel)
                     304     
----                 305             RSEG  ?PR?_hal_adc_set_reference?___LE1_LIB_HAL_HAL_ADC
0000                 306     _hal_adc_set_reference:
                     307             USING   0
                     308                             ; SOURCE LINE # 32
                     309     ;---- Variable 'refsel?141' assigned to Register 'R7' ----
                     310     ; { // Update "refsel" bits
                     311                             ; SOURCE LINE # 33
                     312     ;   ADCCON1 = ((ADCCON1 & 0xFC) | (((unsigned char)(refsel)) & ~0xFC));             
                     313                             ; SOURCE LINE # 34
0000 EF              314             MOV     A,R7
0001 5403            315             ANL     A,#03H
0003 FF              316             MOV     R7,A
0004 E5D3            317             MOV     A,ADCCON1
0006 54FC            318             ANL     A,#0FCH
0008 4F              319             ORL     A,R7
0009 F5D3            320             MOV     ADCCON1,A
                     321     ; }
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     6

                     322                             ; SOURCE LINE # 35
000B 22              323             RET     
                     324     ; END OF _hal_adc_set_reference
                     325     
                     326     ; 
                     327     ; 
                     328     ; void hal_adc_set_input_mode(hal_adc_input_mode_t input_mode)
                     329     
----                 330             RSEG  ?PR?_hal_adc_set_input_mode?___LE1_LIB_HAL_HAL_ADC
0000                 331     _hal_adc_set_input_mode:
                     332             USING   0
                     333                             ; SOURCE LINE # 38
                     334     ;---- Variable 'input_mode?242' assigned to Register 'R7' ----
                     335     ; { // Update "diffm" bits
                     336                             ; SOURCE LINE # 39
                     337     ;   ADCCON2 = ((ADCCON2 & 0x3F) | ((unsigned char)(input_mode) << 6));  
                     338                             ; SOURCE LINE # 40
0000 EF              339             MOV     A,R7
0001 C4              340             SWAP    A
0002 33              341             RLC     A
0003 33              342             RLC     A
0004 54C0            343             ANL     A,#0C0H
0006 FF              344             MOV     R7,A
0007 E5D2            345             MOV     A,ADCCON2
0009 543F            346             ANL     A,#03FH
000B 4F              347             ORL     A,R7
000C F5D2            348             MOV     ADCCON2,A
                     349     ; }
                     350                             ; SOURCE LINE # 41
000E 22              351             RET     
                     352     ; END OF _hal_adc_set_input_mode
                     353     
                     354     ; 
                     355     ; 
                     356     ; void hal_adc_set_conversion_mode(hal_adc_conversion_mode_t conv_mode)
                     357     
----                 358             RSEG  ?PR?_hal_adc_set_conversion_mode?___LE1_LIB_HAL_HAL_ADC
0000                 359     _hal_adc_set_conversion_mode:
                     360             USING   0
                     361                             ; SOURCE LINE # 44
                     362     ;---- Variable 'conv_mode?343' assigned to Register 'R7' ----
                     363     ; { // Update "cont" bit
                     364                             ; SOURCE LINE # 45
                     365     ;   ADCCON2 = ((ADCCON2 & 0xDF) | (((unsigned char)(conv_mode) << 5) & ~0xDF));   
                     366                             ; SOURCE LINE # 46
0000 EF              367             MOV     A,R7
0001 C4              368             SWAP    A
0002 33              369             RLC     A
0003 5420            370             ANL     A,#020H
0005 FF              371             MOV     R7,A
0006 E5D2            372             MOV     A,ADCCON2
0008 54DF            373             ANL     A,#0DFH
000A 4F              374             ORL     A,R7
000B F5D2            375             MOV     ADCCON2,A
                     376     ; }
                     377                             ; SOURCE LINE # 47
000D 22              378             RET     
                     379     ; END OF _hal_adc_set_conversion_mode
                     380     
                     381     ; 
                     382     ; 
                     383     ; void hal_adc_set_sampling_rate(hal_adc_sampling_rate_t rate)
                     384     
----                 385             RSEG  ?PR?_hal_adc_set_sampling_rate?___LE1_LIB_HAL_HAL_ADC
0000                 386     _hal_adc_set_sampling_rate:
                     387             USING   0
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     7

                     388                             ; SOURCE LINE # 50
                     389     ;---- Variable 'rate?444' assigned to Register 'R7' ----
                     390     ; { // Update "rate" bits
                     391                             ; SOURCE LINE # 51
                     392     ;   ADCCON2 = ((ADCCON2 & 0xE3) | (((unsigned char)(rate) << 2) & ~0xE3));        
                     393                             ; SOURCE LINE # 52
0000 EF              394             MOV     A,R7
0001 25E0            395             ADD     A,ACC
0003 25E0            396             ADD     A,ACC
0005 541C            397             ANL     A,#01CH
0007 FF              398             MOV     R7,A
0008 E5D2            399             MOV     A,ADCCON2
000A 54E3            400             ANL     A,#0E3H
000C 4F              401             ORL     A,R7
000D F5D2            402             MOV     ADCCON2,A
                     403     ; }
                     404                             ; SOURCE LINE # 53
000F 22              405             RET     
                     406     ; END OF _hal_adc_set_sampling_rate
                     407     
                     408     ; 
                     409     ; 
                     410     ; void hal_adc_set_power_down_delay(hal_adc_power_down_delay_t pdd)
                     411     
----                 412             RSEG  ?PR?_hal_adc_set_power_down_delay?___LE1_LIB_HAL_HAL_ADC
0000                 413     _hal_adc_set_power_down_delay:
                     414             USING   0
                     415                             ; SOURCE LINE # 56
                     416     ;---- Variable 'pdd?545' assigned to Register 'R7' ----
                     417     ; { // Update "rate" bits
                     418                             ; SOURCE LINE # 57
                     419     ;   ADCCON2 = ((ADCCON2 & 0xE3) | (((unsigned char)(pdd) << 2) & ~0xE3));        
                     420                             ; SOURCE LINE # 58
0000 EF              421             MOV     A,R7
0001 25E0            422             ADD     A,ACC
0003 25E0            423             ADD     A,ACC
0005 541C            424             ANL     A,#01CH
0007 FF              425             MOV     R7,A
0008 E5D2            426             MOV     A,ADCCON2
000A 54E3            427             ANL     A,#0E3H
000C 4F              428             ORL     A,R7
000D F5D2            429             MOV     ADCCON2,A
                     430     ; }
                     431                             ; SOURCE LINE # 59
000F 22              432             RET     
                     433     ; END OF _hal_adc_set_power_down_delay
                     434     
                     435     ; 
                     436     ; 
                     437     ; void hal_adc_set_acq_window(hal_adc_acq_window_t tacq)
                     438     
----                 439             RSEG  ?PR?_hal_adc_set_acq_window?___LE1_LIB_HAL_HAL_ADC
0000                 440     _hal_adc_set_acq_window:
                     441             USING   0
                     442                             ; SOURCE LINE # 62
                     443     ;---- Variable 'tacq?646' assigned to Register 'R7' ----
                     444     ; { // Update "tacq" bits
                     445                             ; SOURCE LINE # 63
                     446     ;   ADCCON2 = ((ADCCON2 & 0xFC) | (((unsigned char)(tacq)) & ~0xFC));               
                     447                             ; SOURCE LINE # 64
0000 EF              448             MOV     A,R7
0001 5403            449             ANL     A,#03H
0003 FF              450             MOV     R7,A
0004 E5D2            451             MOV     A,ADCCON2
0006 54FC            452             ANL     A,#0FCH
0008 4F              453             ORL     A,R7
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     8

0009 F5D2            454             MOV     ADCCON2,A
                     455     ; }
                     456                             ; SOURCE LINE # 65
000B 22              457             RET     
                     458     ; END OF _hal_adc_set_acq_window
                     459     
                     460     ; 
                     461     ; 
                     462     ; void hal_adc_set_resolution(hal_adc_resolution_t res)
                     463     
----                 464             RSEG  ?PR?_hal_adc_set_resolution?___LE1_LIB_HAL_HAL_ADC
0000                 465     _hal_adc_set_resolution:
                     466             USING   0
                     467                             ; SOURCE LINE # 68
                     468     ;---- Variable 'res?747' assigned to Register 'R7' ----
                     469     ; { // Update "resol" bits
                     470                             ; SOURCE LINE # 69
                     471     ;   ADCCON3 = ((ADCCON3 & 0x3F) | ((unsigned char)(res) << 6));         
                     472                             ; SOURCE LINE # 70
0000 EF              473             MOV     A,R7
0001 C4              474             SWAP    A
0002 33              475             RLC     A
0003 33              476             RLC     A
0004 54C0            477             ANL     A,#0C0H
0006 FF              478             MOV     R7,A
0007 E5D1            479             MOV     A,ADCCON3
0009 543F            480             ANL     A,#03FH
000B 4F              481             ORL     A,R7
000C F5D1            482             MOV     ADCCON3,A
                     483     ; }
                     484                             ; SOURCE LINE # 71
000E 22              485             RET     
                     486     ; END OF _hal_adc_set_resolution
                     487     
                     488     ; 
                     489     ; 
                     490     ; void hal_adc_set_data_just(hal_adc_data_just_t just)
                     491     
----                 492             RSEG  ?PR?_hal_adc_set_data_just?___LE1_LIB_HAL_HAL_ADC
0000                 493     _hal_adc_set_data_just:
                     494             USING   0
                     495                             ; SOURCE LINE # 74
                     496     ;---- Variable 'just?848' assigned to Register 'R7' ----
                     497     ; { // Update "rljust" bit
                     498                             ; SOURCE LINE # 75
                     499     ;   ADCCON3 = ((ADCCON3 & 0xDF) | (((unsigned char)(just) << 5) & ~0xDF));      
                     500                             ; SOURCE LINE # 76
0000 EF              501             MOV     A,R7
0001 C4              502             SWAP    A
0002 33              503             RLC     A
0003 5420            504             ANL     A,#020H
0005 FF              505             MOV     R7,A
0006 E5D1            506             MOV     A,ADCCON3
0008 54DF            507             ANL     A,#0DFH
000A 4F              508             ORL     A,R7
000B F5D1            509             MOV     ADCCON3,A
                     510     ; }
                     511                             ; SOURCE LINE # 77
000D 22              512             RET     
                     513     ; END OF _hal_adc_set_data_just
                     514     
                     515     ; 
                     516     ; 
                     517     ; void hal_adc_start(void)
                     518     
----                 519             RSEG  ?PR?hal_adc_start?___LE1_LIB_HAL_HAL_ADC
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE     9

0000                 520     hal_adc_start:
                     521             USING   0
                     522                             ; SOURCE LINE # 80
                     523     ; {
                     524                             ; SOURCE LINE # 81
                     525     ;   unsigned char cnt = ADC_STARTUP_CNT;             // Get the counter value
                     526                             ; SOURCE LINE # 82
                     527     ;---- Variable 'cnt?949' assigned to Register 'R7' ----
0000 7F01            528             MOV     R7,#01H
                     529     ;   ADCCON1 = ADCCON1 | BIT_7;                 // Set "pwrup" bit
                     530                             ; SOURCE LINE # 83
0002 43D380          531             ORL     ADCCON1,#080H
0005                 532     ?C0010:
                     533     ;    
                     534     ;   while(cnt--);                              // Wait for busy bit to stabilize
                     535                             ; SOURCE LINE # 85
0005 AE07            536             MOV     R6,AR7
0007 1F              537             DEC     R7
0008 EE              538             MOV     A,R6
0009 70FA            539             JNZ     ?C0010
                     540     ; }
                     541                             ; SOURCE LINE # 86
000B                 542     ?C0012:
000B 22              543             RET     
                     544     ; END OF hal_adc_start
                     545     
                     546     ; 
                     547     ; 
                     548     ; unsigned char hal_adc_read_LSB(void)
                     549     
----                 550             RSEG  ?PR?hal_adc_read_LSB?___LE1_LIB_HAL_HAL_ADC
0000                 551     hal_adc_read_LSB:
                     552             USING   0
                     553                             ; SOURCE LINE # 89
                     554     ; {
                     555                             ; SOURCE LINE # 90
                     556     ;   return ADCDATL;                            // Return value stored in ADCDATL
                     557                             ; SOURCE LINE # 91
0000 AFD5            558             MOV     R7,ADCDATL
                     559     ; }
                     560                             ; SOURCE LINE # 92
0002                 561     ?C0013:
0002 22              562             RET     
                     563     ; END OF hal_adc_read_LSB
                     564     
                     565     ; 
                     566     ; unsigned char hal_adc_read_MSB(void)
                     567     
----                 568             RSEG  ?PR?hal_adc_read_MSB?___LE1_LIB_HAL_HAL_ADC
0000                 569     hal_adc_read_MSB:
                     570             USING   0
                     571                             ; SOURCE LINE # 94
                     572     ; {
                     573                             ; SOURCE LINE # 95
                     574     ;   return ADCDATH;                            // Return value stored in ADCDATH
                     575                             ; SOURCE LINE # 96
0000 AFD4            576             MOV     R7,ADCDATH
                     577     ; }
                     578                             ; SOURCE LINE # 97
0002                 579     ?C0014:
0002 22              580             RET     
                     581     ; END OF hal_adc_read_MSB
                     582     
                     583     ; 
                     584     ; unsigned char hal_adc_busy(void)
                     585     
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    10

----                 586             RSEG  ?PR?hal_adc_busy?___LE1_LIB_HAL_HAL_ADC
0000                 587     hal_adc_busy:
                     588             USING   0
                     589                             ; SOURCE LINE # 99
                     590     ; {
                     591                             ; SOURCE LINE # 100
                     592     ;   return ((ADCCON1 & BIT_6) > 0);            // Return status of "busy" bit  
                     593                             ; SOURCE LINE # 101
0000 E5D3            594             MOV     A,ADCCON1
0002 5440            595             ANL     A,#040H
0004 D3              596             SETB    C
0005 9400            597             SUBB    A,#00H
0007 7F00            598             MOV     R7,#00H
0009 4002            599             JC      ?C0015
000B 7F01            600             MOV     R7,#01H
000D                 601     ?C0015:
000D                 602     ?C0016:
                     603     ; }
                     604                             ; SOURCE LINE # 102
000D                 605     ?C0017:
000D 22              606             RET     
                     607     ; END OF hal_adc_busy
                     608     
                     609     ;                                                                                
                     610     ; hal_adc_overflow_t hal_adc_get_overflow_status(void)
                     611     
----                 612             RSEG  ?PR?hal_adc_get_overflow_status?___LE1_LIB_HAL_HAL_ADC
0000                 613     hal_adc_get_overflow_status:
                     614             USING   0
                     615                             ; SOURCE LINE # 104
                     616     ; {
                     617                             ; SOURCE LINE # 105
                     618     ;   return (hal_adc_overflow_t)((ADCCON3 & (BIT_3 | BIT_4)) >> 3); 
                     619                             ; SOURCE LINE # 106
0000 E5D1            620             MOV     A,ADCCON3
0002 5418            621             ANL     A,#018H
0004 13              622             RRC     A
0005 13              623             RRC     A
0006 13              624             RRC     A
0007 541F            625             ANL     A,#01FH
0009 FF              626             MOV     R7,A
                     627     ; }                                            // Return status bits from ADCCON3          
                                          ; SOURCE LINE # 107
000A                 628     ?C0018:
000A 22              629             RET     
                     630     ; END OF hal_adc_get_overflow_status
                     631     
                     632             END
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E                                    T Y P E  V A L U E   ATTRIBUTES

?C0010. . . . . . . . . . . . . . . . .    C ADDR   0005H   R   SEG=?PR?HAL_ADC_START?___LE1_LIB_HAL_HAL_ADC
?C0012. . . . . . . . . . . . . . . . .    C ADDR   000BH   R   SEG=?PR?HAL_ADC_START?___LE1_LIB_HAL_HAL_ADC
?C0013. . . . . . . . . . . . . . . . .    C ADDR   0002H   R   SEG=?PR?HAL_ADC_READ_LSB?___LE1_LIB_HAL_HAL_ADC
?C0014. . . . . . . . . . . . . . . . .    C ADDR   0002H   R   SEG=?PR?HAL_ADC_READ_MSB?___LE1_LIB_HAL_HAL_ADC
?C0015. . . . . . . . . . . . . . . . .    C ADDR   000DH   R   SEG=?PR?HAL_ADC_BUSY?___LE1_LIB_HAL_HAL_ADC
?C0016. . . . . . . . . . . . . . . . .    C ADDR   000DH   R   SEG=?PR?HAL_ADC_BUSY?___LE1_LIB_HAL_HAL_ADC
?C0017. . . . . . . . . . . . . . . . .    C ADDR   000DH   R   SEG=?PR?HAL_ADC_BUSY?___LE1_LIB_HAL_HAL_ADC
?C0018. . . . . . . . . . . . . . . . .    C ADDR   000AH   R   SEG=?PR?HAL_ADC_GET_OVERFLOW_STATUS?___LE1_LIB_HAL_HAL_A
                                         DC
?PR?HAL_ADC_BUSY?___LE1_LIB_HAL_HAL_ADC    C SEG    000EH       REL=UNIT
?PR?HAL_ADC_GET_OVERFLOW_STATUS?___LE1_LIB_C SEG L_A000BH       REL=UNIT
?PR?HAL_ADC_READ_LSB?___LE1_LIB_HAL_HAL_ADCC SEG    0003H       REL=UNIT
?PR?HAL_ADC_READ_MSB?___LE1_LIB_HAL_HAL_ADCC SEG    0003H       REL=UNIT
?PR?HAL_ADC_START?___LE1_LIB_HAL_HAL_ADC   C SEG    000CH       REL=UNIT
?PR?_HAL_ADC_SET_ACQ_WINDOW?___LE1_LIB_HAL_C SEG C  000CH       REL=UNIT
?PR?_HAL_ADC_SET_CONVERSION_MODE?___LE1_LIBC SEG AL_000EH       REL=UNIT
?PR?_HAL_ADC_SET_DATA_JUST?___LE1_LIB_HAL_HC SEG    000EH       REL=UNIT
?PR?_HAL_ADC_SET_INPUT_CHANNEL?___LE1_LIB_HC SEG _AD0010H       REL=UNIT
?PR?_HAL_ADC_SET_INPUT_MODE?___LE1_LIB_HAL_C SEG C  000FH       REL=UNIT
?PR?_HAL_ADC_SET_POWER_DOWN_DELAY?___LE1_LIC SEG HAL0010H       REL=UNIT
?PR?_HAL_ADC_SET_REFERENCE?___LE1_LIB_HAL_HC SEG    000CH       REL=UNIT
?PR?_HAL_ADC_SET_RESOLUTION?___LE1_LIB_HAL_C SEG C  000FH       REL=UNIT
?PR?_HAL_ADC_SET_SAMPLING_RATE?___LE1_LIB_HC SEG _AD0010H       REL=UNIT
AC. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.6 A   
ACC . . . . . . . . . . . . . . . . . .    D ADDR   00E0H   A   
ADCCON1 . . . . . . . . . . . . . . . .    D ADDR   00D3H   A   
ADCCON2 . . . . . . . . . . . . . . . .    D ADDR   00D2H   A   
ADCCON3 . . . . . . . . . . . . . . . .    D ADDR   00D1H   A   
ADCDATH . . . . . . . . . . . . . . . .    D ADDR   00D4H   A   
ADCDATL . . . . . . . . . . . . . . . .    D ADDR   00D5H   A   
ADCON . . . . . . . . . . . . . . . . .    D ADDR   00D8H   A   
AR7 . . . . . . . . . . . . . . . . . .    D ADDR   0007H   A   
ARCON . . . . . . . . . . . . . . . . .    D ADDR   00EFH   A   
B . . . . . . . . . . . . . . . . . . .    D ADDR   00F0H   A   
BD. . . . . . . . . . . . . . . . . . .    B ADDR   00D8H.7 A   
CC1 . . . . . . . . . . . . . . . . . .    D ADDR   00C2H   A   
CC2 . . . . . . . . . . . . . . . . . .    D ADDR   00C4H   A   
CC3 . . . . . . . . . . . . . . . . . .    D ADDR   00C6H   A   
CCEN. . . . . . . . . . . . . . . . . .    D ADDR   00C1H   A   
CCH1. . . . . . . . . . . . . . . . . .    D ADDR   00C3H   A   
CCH2. . . . . . . . . . . . . . . . . .    D ADDR   00C5H   A   
CCH3. . . . . . . . . . . . . . . . . .    D ADDR   00C7H   A   
CCL1. . . . . . . . . . . . . . . . . .    D ADDR   00C2H   A   
CCL2. . . . . . . . . . . . . . . . . .    D ADDR   00C4H   A   
CCL3. . . . . . . . . . . . . . . . . .    D ADDR   00C6H   A   
CCPDATIA. . . . . . . . . . . . . . . .    D ADDR   00DDH   A   
CCPDATIB. . . . . . . . . . . . . . . .    D ADDR   00DEH   A   
CCPDATO . . . . . . . . . . . . . . . .    D ADDR   00DFH   A   
CLKCTRL . . . . . . . . . . . . . . . .    D ADDR   00A3H   A   
CLKLFCTRL . . . . . . . . . . . . . . .    D ADDR   00ADH   A   
COMPCON . . . . . . . . . . . . . . . .    D ADDR   00DBH   A   
CRC . . . . . . . . . . . . . . . . . .    D ADDR   00CAH   A   
CRCH. . . . . . . . . . . . . . . . . .    D ADDR   00CBH   A   
CRCL. . . . . . . . . . . . . . . . . .    D ADDR   00CAH   A   
CY. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.7 A   
DPH . . . . . . . . . . . . . . . . . .    D ADDR   0083H   A   
DPH1. . . . . . . . . . . . . . . . . .    D ADDR   0085H   A   
DPL . . . . . . . . . . . . . . . . . .    D ADDR   0082H   A   
DPL1. . . . . . . . . . . . . . . . . .    D ADDR   0084H   A   
DPS . . . . . . . . . . . . . . . . . .    D ADDR   0092H   A   
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    12

EA. . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.7 A   
ES0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.3 A   
ET2 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.5 A   
EX0 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . . . . . . . . .    B ADDR   00A8H.2 A   
EXEN2 . . . . . . . . . . . . . . . . .    B ADDR   00B8H.7 A   
EXF2. . . . . . . . . . . . . . . . . .    B ADDR   00C0H.7 A   
F0. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.5 A   
FCR . . . . . . . . . . . . . . . . . .    D ADDR   00FAH   A   
FDCR. . . . . . . . . . . . . . . . . .    D ADDR   00FBH   A   
FPCR. . . . . . . . . . . . . . . . . .    D ADDR   00F9H   A   
FSR . . . . . . . . . . . . . . . . . .    D ADDR   00F8H   A   
HAL_ADC_BUSY. . . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?HAL_ADC_BUSY?___LE1_LIB_HAL_HAL_ADC
HAL_ADC_GET_OVERFLOW_STATUS . . . . . .    C ADDR   0000H   R   SEG=?PR?HAL_ADC_GET_OVERFLOW_STATUS?___LE1_LIB_HAL_HAL_A
                                         DC
HAL_ADC_READ_LSB. . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?HAL_ADC_READ_LSB?___LE1_LIB_HAL_HAL_ADC
HAL_ADC_READ_MSB. . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?HAL_ADC_READ_MSB?___LE1_LIB_HAL_HAL_ADC
HAL_ADC_START . . . . . . . . . . . . .    C ADDR   0000H   R   SEG=?PR?HAL_ADC_START?___LE1_LIB_HAL_HAL_ADC
I2FR. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.5 A   
I3FR. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.6 A   
IE0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.1 A   
IE1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.3 A   
IEN0. . . . . . . . . . . . . . . . . .    D ADDR   00A8H   A   
IEN1. . . . . . . . . . . . . . . . . .    D ADDR   00B8H   A   
INFEN . . . . . . . . . . . . . . . . .    B ADDR   00F8H.3 A   
INTEXP. . . . . . . . . . . . . . . . .    D ADDR   00A6H   A   
IP0 . . . . . . . . . . . . . . . . . .    D ADDR   00A9H   A   
IP1 . . . . . . . . . . . . . . . . . .    D ADDR   00B9H   A   
IRCON . . . . . . . . . . . . . . . . .    D ADDR   00C0H   A   
IT0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.0 A   
IT1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.2 A   
MCDIS . . . . . . . . . . . . . . . . .    B ADDR   00F8H.7 A   
MD0 . . . . . . . . . . . . . . . . . .    D ADDR   00E9H   A   
MD1 . . . . . . . . . . . . . . . . . .    D ADDR   00EAH   A   
MD2 . . . . . . . . . . . . . . . . . .    D ADDR   00EBH   A   
MD3 . . . . . . . . . . . . . . . . . .    D ADDR   00ECH   A   
MD4 . . . . . . . . . . . . . . . . . .    D ADDR   00EDH   A   
MD5 . . . . . . . . . . . . . . . . . .    D ADDR   00EEH   A   
MEMCON. . . . . . . . . . . . . . . . .    D ADDR   00A7H   A   
MISC. . . . . . . . . . . . . . . . . .    B ADDR   00B8H.4 A   
MISCF . . . . . . . . . . . . . . . . .    B ADDR   00C0H.4 A   
MPAGE . . . . . . . . . . . . . . . . .    D ADDR   00C9H   A   
OPMCON. . . . . . . . . . . . . . . . .    D ADDR   00AEH   A   
OV. . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.2 A   
P . . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.0 A   
P0. . . . . . . . . . . . . . . . . . .    D ADDR   0080H   A   
P00 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.0 A   
P01 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.1 A   
P02 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.2 A   
P03 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.3 A   
P04 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.4 A   
P05 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.5 A   
P06 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.6 A   
P07 . . . . . . . . . . . . . . . . . .    B ADDR   0080H.7 A   
P0CON . . . . . . . . . . . . . . . . .    D ADDR   009EH   A   
P0DIR . . . . . . . . . . . . . . . . .    D ADDR   0093H   A   
P1. . . . . . . . . . . . . . . . . . .    D ADDR   0090H   A   
P10 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.0 A   
P11 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.1 A   
P12 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.2 A   
P13 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.3 A   
P14 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.4 A   
P15 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.5 A   
P16 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.6 A   
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    13

P17 . . . . . . . . . . . . . . . . . .    B ADDR   0090H.7 A   
P1CON . . . . . . . . . . . . . . . . .    D ADDR   009FH   A   
P1DIR . . . . . . . . . . . . . . . . .    D ADDR   0094H   A   
P2. . . . . . . . . . . . . . . . . . .    D ADDR   00A0H   A   
P20 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.0 A   
P21 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.1 A   
P22 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.2 A   
P23 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.3 A   
P24 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.4 A   
P25 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.5 A   
P26 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.6 A   
P27 . . . . . . . . . . . . . . . . . .    B ADDR   00A0H.7 A   
P2CON . . . . . . . . . . . . . . . . .    D ADDR   0097H   A   
P2DIR . . . . . . . . . . . . . . . . .    D ADDR   0095H   A   
P3. . . . . . . . . . . . . . . . . . .    D ADDR   00B0H   A   
P30 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.0 A   
P31 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.1 A   
P32 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.2 A   
P33 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.3 A   
P34 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.4 A   
P35 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.5 A   
P36 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.6 A   
P37 . . . . . . . . . . . . . . . . . .    B ADDR   00B0H.7 A   
P3CON . . . . . . . . . . . . . . . . .    D ADDR   008FH   A   
P3DIR . . . . . . . . . . . . . . . . .    D ADDR   0096H   A   
PCON. . . . . . . . . . . . . . . . . .    D ADDR   0087H   A   
POFCON. . . . . . . . . . . . . . . . .    D ADDR   00DCH   A   
PSW . . . . . . . . . . . . . . . . . .    D ADDR   00D0H   A   
PWMCON. . . . . . . . . . . . . . . . .    D ADDR   00B2H   A   
PWMDC0. . . . . . . . . . . . . . . . .    D ADDR   00A1H   A   
PWMDC1. . . . . . . . . . . . . . . . .    D ADDR   00A2H   A   
PWRDWN. . . . . . . . . . . . . . . . .    D ADDR   00A4H   A   
RB80. . . . . . . . . . . . . . . . . .    B ADDR   0098H.2 A   
RDEND . . . . . . . . . . . . . . . . .    B ADDR   00F8H.1 A   
RDIS. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.2 A   
RDYN. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.4 A   
REN0. . . . . . . . . . . . . . . . . .    B ADDR   0098H.4 A   
RF. . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.1 A   
RFCE. . . . . . . . . . . . . . . . . .    B ADDR   00E8H.0 A   
RFCKEN. . . . . . . . . . . . . . . . .    B ADDR   00E8H.2 A   
RFCON . . . . . . . . . . . . . . . . .    D ADDR   00E8H   A   
RFCSN . . . . . . . . . . . . . . . . .    B ADDR   00E8H.1 A   
RFF . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.1 A   
RFSPI . . . . . . . . . . . . . . . . .    B ADDR   00B8H.0 A   
RFSPIF. . . . . . . . . . . . . . . . .    B ADDR   00C0H.0 A   
RI0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.0 A   
RNGCTL. . . . . . . . . . . . . . . . .    D ADDR   00D6H   A   
RNGDAT. . . . . . . . . . . . . . . . .    D ADDR   00D7H   A   
RS0 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.3 A   
RS1 . . . . . . . . . . . . . . . . . .    B ADDR   00D0H.4 A   
RSTREAS . . . . . . . . . . . . . . . .    D ADDR   00B1H   A   
RTC2CMP0. . . . . . . . . . . . . . . .    D ADDR   00B4H   A   
RTC2CMP1. . . . . . . . . . . . . . . .    D ADDR   00B5H   A   
RTC2CON . . . . . . . . . . . . . . . .    D ADDR   00B3H   A   
RTC2CPT00 . . . . . . . . . . . . . . .    D ADDR   00B6H   A   
RTC2CPT01 . . . . . . . . . . . . . . .    D ADDR   00ABH   A   
RTC2CPT10 . . . . . . . . . . . . . . .    D ADDR   00ACH   A   
S0BUF . . . . . . . . . . . . . . . . .    D ADDR   0099H   A   
S0CON . . . . . . . . . . . . . . . . .    D ADDR   0098H   A   
S0RELH. . . . . . . . . . . . . . . . .    D ADDR   00BAH   A   
S0RELL. . . . . . . . . . . . . . . . .    D ADDR   00AAH   A   
SM0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.7 A   
SM1 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.6 A   
SM20. . . . . . . . . . . . . . . . . .    B ADDR   0098H.5 A   
SP. . . . . . . . . . . . . . . . . . .    D ADDR   0081H   A   
SPI . . . . . . . . . . . . . . . . . .    B ADDR   00B8H.2 A   
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    14

SPIF. . . . . . . . . . . . . . . . . .    B ADDR   00C0H.2 A   
SPIMCON0. . . . . . . . . . . . . . . .    D ADDR   00FCH   A   
SPIMCON1. . . . . . . . . . . . . . . .    D ADDR   00FDH   A   
SPIMDAT . . . . . . . . . . . . . . . .    D ADDR   00FFH   A   
SPIMSTAT. . . . . . . . . . . . . . . .    D ADDR   00FEH   A   
SPIRCON0. . . . . . . . . . . . . . . .    D ADDR   00E4H   A   
SPIRCON1. . . . . . . . . . . . . . . .    D ADDR   00E5H   A   
SPIRDAT . . . . . . . . . . . . . . . .    D ADDR   00E7H   A   
SPIRSTAT. . . . . . . . . . . . . . . .    D ADDR   00E6H   A   
SPISCON0. . . . . . . . . . . . . . . .    D ADDR   00BCH   A   
SPISCON1. . . . . . . . . . . . . . . .    D ADDR   00BDH   A   
SPISDAT . . . . . . . . . . . . . . . .    D ADDR   00BFH   A   
SPISRDSZ. . . . . . . . . . . . . . . .    D ADDR   00B7H   A   
SPISSTAT. . . . . . . . . . . . . . . .    D ADDR   00BEH   A   
STP . . . . . . . . . . . . . . . . . .    B ADDR   00F8H.6 A   
T2. . . . . . . . . . . . . . . . . . .    D ADDR   00CCH   A   
T2CM. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.2 A   
T2CON . . . . . . . . . . . . . . . . .    D ADDR   00C8H   A   
T2I0. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.0 A   
T2I1. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.1 A   
T2PS. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.7 A   
T2R0. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.3 A   
T2R1. . . . . . . . . . . . . . . . . .    B ADDR   00C8H.4 A   
TB80. . . . . . . . . . . . . . . . . .    B ADDR   0098H.3 A   
TCON. . . . . . . . . . . . . . . . . .    D ADDR   0088H   A   
TF0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.5 A   
TF1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.7 A   
TF2 . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.6 A   
TH0 . . . . . . . . . . . . . . . . . .    D ADDR   008CH   A   
TH1 . . . . . . . . . . . . . . . . . .    D ADDR   008DH   A   
TH2 . . . . . . . . . . . . . . . . . .    D ADDR   00CDH   A   
TI0 . . . . . . . . . . . . . . . . . .    B ADDR   0098H.1 A   
TL0 . . . . . . . . . . . . . . . . . .    D ADDR   008AH   A   
TL1 . . . . . . . . . . . . . . . . . .    D ADDR   008BH   A   
TL2 . . . . . . . . . . . . . . . . . .    D ADDR   00CCH   A   
TMOD. . . . . . . . . . . . . . . . . .    D ADDR   0089H   A   
TR0 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.4 A   
TR1 . . . . . . . . . . . . . . . . . .    B ADDR   0088H.6 A   
W2CON0. . . . . . . . . . . . . . . . .    D ADDR   00E2H   A   
W2CON1. . . . . . . . . . . . . . . . .    D ADDR   00E1H   A   
W2DAT . . . . . . . . . . . . . . . . .    D ADDR   00DAH   A   
W2SADR. . . . . . . . . . . . . . . . .    D ADDR   00D9H   A   
WDSV. . . . . . . . . . . . . . . . . .    D ADDR   00AFH   A   
WEN . . . . . . . . . . . . . . . . . .    B ADDR   00F8H.5 A   
WPEN. . . . . . . . . . . . . . . . . .    B ADDR   00F8H.0 A   
WUCON . . . . . . . . . . . . . . . . .    D ADDR   00A5H   A   
WUF . . . . . . . . . . . . . . . . . .    B ADDR   00C0H.5 A   
WUIRQ . . . . . . . . . . . . . . . . .    B ADDR   00B8H.5 A   
WUOPC0. . . . . . . . . . . . . . . . .    D ADDR   00CFH   A   
WUOPC1. . . . . . . . . . . . . . . . .    D ADDR   00CEH   A   
WUPIN . . . . . . . . . . . . . . . . .    B ADDR   00B8H.3 A   
WUPINF. . . . . . . . . . . . . . . . .    B ADDR   00C0H.3 A   
_HAL_ADC_SET_ACQ_WINDOW . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_ACQ_WINDOW?___LE1_LIB_HAL_HAL_ADC
_HAL_ADC_SET_CONVERSION_MODE. . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_CONVERSION_MODE?___LE1_LIB_HAL_HAL_
                                         ADC
_HAL_ADC_SET_DATA_JUST. . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_DATA_JUST?___LE1_LIB_HAL_HAL_ADC
_HAL_ADC_SET_INPUT_CHANNEL. . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_INPUT_CHANNEL?___LE1_LIB_HAL_HAL_AD
                                         C
_HAL_ADC_SET_INPUT_MODE . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_INPUT_MODE?___LE1_LIB_HAL_HAL_ADC
_HAL_ADC_SET_POWER_DOWN_DELAY . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_POWER_DOWN_DELAY?___LE1_LIB_HAL_HAL
                                         _ADC
_HAL_ADC_SET_REFERENCE. . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_REFERENCE?___LE1_LIB_HAL_HAL_ADC
_HAL_ADC_SET_RESOLUTION . . . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_RESOLUTION?___LE1_LIB_HAL_HAL_ADC
_HAL_ADC_SET_SAMPLING_RATE. . . . . . .    C ADDR   0000H   R   SEG=?PR?_HAL_ADC_SET_SAMPLING_RATE?___LE1_LIB_HAL_HAL_AD
                                         C
___LE1_LIB_HAL_HAL_ADC. . . . . . . . .    N NUMB   -----       
A51 MACRO ASSEMBLER  ___LE1_LIB_HAL_HAL_ADC                                               06/03/2010 14:40:49 PAGE    15



REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
